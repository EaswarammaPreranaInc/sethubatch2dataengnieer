# Find  outputs  (Home  work)
for  i   in   range(1 , 8):
	print(i)
	if  i % 3  == 0:
			continue
	else:
			print('Sec')
	print('Hello')
# End of loop
print('Outside loop')

o/p:
 1
Sec  
Hello  
2  
Sec  
Hello  
3  
4  
Sec  
Hello  
5  
Sec  
Hello  
6  
7  
Sec  
Hello  
Outside loop


##################################################################


 # Identify Error  (Home  work)
if ():
	print('Hyd')
	continue
	print('Sec')
o/p c ondition  error because of if is empty

#################################################################


 # Find outputs (Home  work)
for  i   in   range(1 , 8):
	print(i)
	if   i % 3 == 0:
		break
	else:
		print('Sec')
	print('Hello')
# End  of  the  loop
print('Outside loop')
output:
 1  
Sec  
Hello  
2  
Sec  
Hello  
3  
Outside loop

#############################################################################
# Identify Error  (Home  work)
if(10 , 20 , 30):
	print('Hyd')
	break
	print('Sec')
output:
 for i in range(1):
    if (10, 20, 30):
        print('Hyd')
        break
        print('Sec')


# Find  outputs  (Home  work)
for  i   in   range(1 , 8):
	print(i)
	if   i % 3 == 0:
		pass
		print('Hyd')
	else:
		print('Sec')
	print('Hello')
# End  of  the  loop
print('Outside loop')

output : 
1  
Sec  
Hello  
2  
Sec  
Hello  
3  
Hyd  
Hello  
4  
Sec  
Hello  
5  
Sec  
Hello  
6  
Hyd  
Hello  
7  
Sec  
Hello  
Outside loop





# Find  outputs  (Home  work)
for  i   in   range(1 , 8):
	print(i)
	if   i % 3 == 0:
		exit()
	else:
		print('Sec')
	print('Hello')
# End  of  the  loop
print('Outside loop')

output: 
1  
Sec  
Hello  
2  
Sec  
Hello  
3



 # Find  outputs  (Home  work)
for  i  in  range(1 , 8):
	print(i)
	if   i % 3 == 0:
		continue
	else:
		print('Sec')
	print('Hello')
else:
	print('else  suite')
# End  of  the  loop
print('Outside  loop')
output:
1  
Sec  
Hello  
2  
Sec  
Hello  
3  
4  
Sec  
Hello  
5  
Sec  
Hello  
6  
7  
Sec  
Hello  
else suite  
Outside loop



 # Find  outputs  (Home  work)
for  i  in  range(1 , 8):
	print(i)
	if  i % 3 == 0:
		break
	else:
		print('Sec')
	print('Hello')
else:
	print('else  suite')
#End   of  the  loop
print('Outside  loop')
output:
1  
Sec  
Hello  
2  
Sec  
Hello  
3  
Outside loop



 # Find  outputs  (Home  work)
for  i  in  range(1 , 8):
	print(i)
	if  i == 8:
		break
	else:
		print('Sec')
	print('Hello')
else:
	print('else  suite')
# End  of  the  loop
print('Outside loop')


ouput:
1  
Sec  
Hello  
2  
Sec  
Hello  
3  
Sec  
Hello  
4  
Sec  
Hello  
5  
Sec  
Hello  
6  
Sec  
Hello  
7  
Sec  
Hello  
else suite  
Outside loop




 '''
Write  a  program  to  search  for  an  element  in  the  list  without  using  in  operator  and
print  Found  or  Not  Found  message  (Assume  that  there  are  no  duplicates)

Let  list  be   [10 , 20 , 15 , 12 , 18]
1) What  is  the  output  if  15  is  seacrhed ?  --->  Found  at  index  2

2) What  is  the  output  if  19  is  seacrhed ?  --->  Not  found

3) What  action  to  be  made  when  'x'  does  not  match  with  the  current  element  of  list ?  --->
																						Compare  'x'  with  next  element  of  list

4) What  action  to  be  made  when  'x'  matches   with  list  element ?  --->
																				Print  found   message  along  with  index  and
																				do  not  search  for  'x'  in  rest  of  the  list

5) What  action  to  be  made  when  'x'   does  not  match  with  all  the  elements  of  list ?  --->
																										Print  not  found   message

6) Hint: Use  for  loop
'''
output ;;

lst = [10, 20, 15, 12, 18]

x = int(input("Enter element to search: "))
if :
found = False
for index in range(len(lst)):
    if x == lst[index]:
        print(f"Found at index {index}")
        found = True
        break 
else: 

    print("Not found")



 Enter any list: [10,20,15,12,18]
Enter the element to be searched : 15
Found  at   index  :   2

output :
lst = eval(input("Enter any list: "))
x = int(input("Enter the element to be searched : "))
found = False
for i in range(len(lst)):
    if lst[i] == x:
        print("Found  at   index  :  ", i)
        found = True
        break
if not found:
    print("Not found")



 Enter any list: [25,10.8,'Hyd',True]
Enter the element to be searched : 3+4j
Not  Found
'''
output 
lst = eval(input("Enter any list: "))
x = eval(input("Enter the element to be searched : "))  

found = False

for i in range(len(lst)):
    if lst[i] == x:
        print("Found  at   index  :  ", i)
        found = True
        break

if not found:
    print("Not Found")








Write  a  program  to  search  for  an  element  in  the  list  and  print  index  of  each  element
and  also  number  of  times  it  is  found (Assume  that  list  may  contain  duplicate  elements)

List :   [10 , 20 , 15 , 12 , 18 , 15 , 19 , 14 , 15 , 14]

Search  for  15

Outputs :  15  is  found  at  index  2
                 15  is  found  at  index  5
                 15  is  found  at  index  8
                 15  is  found   3  times
'''


output 


lst = [10, 20, 15, 12, 18, 15, 19, 14, 15, 14]

x = int(input("Enter the element to be searched: "))
count = 0
for i in range(len(lst)):
    if lst[i] == x:
        print(f"{x} is found at index {i}")
        count += 1
if count > 0:
    print(f"{x} is found {count} times")
else:
    print(f"{x} is not found in the list")



 #  Walrus   operator (:=)  demo  program
print(a := 25)
print(a = 25)
print(a)
print(a := 6 + 7)
print(a)
print((a := 6) + 7)
print(a)
print((a = 6) + 7)
output
print(a := 25)           # Output: 25
print(a)                 # Output: 25

print(a := 6 + 7)        # Output: 13
print(a)                 # Output: 13

print((a := 6) + 7)      # Output: 13
print(a)                 # Output: 6





# Find  outputs  (Home  work)
a = 0
if  a == 0:
	print('Hyd')
else:
	print('Sec')
if  b := 0:
	print('Hyd')
else:
	print('Sec : ' , b)
if  c = 0:
	print('Hyd')
else:
	print('Sec')

output:
Hyd  
Sec :  0  
SyntaxError on line: if c = 0:





Write  a  program to  determine  average  of  inputs  which  are  terminated  with  ctrl + z
(without  walrus  operator)

Let  inputs  be  25 , 10.8 , True ,  ctrl + z

sum = 0 + 25 + 10.8 + True = 36.8
ctr = 0 + 1 + 1 + 1 = 3

1) What  is  ctrl + z ?  ---> End  of  inputs  i.e.  No  more  inputs

2) What  does  input()  function  do  when  input  is  ctrl + z ?  ---> Throws  EOFError

3) How  is   end  of  inputs  denoted  in  unix ?  ---> ctrl + d
'''
 Enter input  (ctrl + z  to  stop)  :  25
Enter input  (ctrl + z  to  stop)  :  10.8
Enter input  (ctrl + z  to  stop)  :  True
Enter input  (ctrl + z  to  stop)  :  36.9
Enter input  (ctrl + z  to  stop)  :  45
Enter input  (ctrl + z  to  stop)  :  False
Enter input  (ctrl + z  to  stop)  :  92.8
Enter input  (ctrl + z  to  stop)  :  ^Z
Average :   30.214285714285715

total = 0
count = 0

print("Enter input (Ctrl+Z to stop on Windows / Ctrl+D on Unix):")

try:
    while True:
        inp = input("Enter input (ctrl + z to stop) : ")
        # Handle conversion
        if inp.lower() == "true":
            value = True
        elif inp.lower() == "false":
            value = False
        else:
            try:
                value = float(inp)
            except ValueError:
                print("Invalid input. Skipping...")
                continue  # skip this input
        total += value
        count += 1
except EOFError:
    pass  # End of input

if count == 0:
    print("No valid inputs entered.")
else:
    average = total / count
    print("Average :", average)








 del  operator  demo program  (Home  work)
a = 25
print(a)----->25
del   a
print(a)---->error



# Find  outputs  (Home  work)
a = b = c = 25
print(a , b , c)-------->25 25 25
del   a
print(b , c)
print(a)------>25 25
del   b
print(c)
print(b)
del   c
print(c)





  Can  multiple  objects  be  deleted  with  same  del  operator ?
a , b , c = 25 , 10.8 , 'Hyd'
print(a , b , c)
del   a , b , c
print(a)
print(b)
print(c)
output :


a, b, c = 25, 10.8, 'Hyd'
print(a, b, c)      # Output: 25 10.8 Hyd
del a, b, c         # All 3 variables deleted
print(a)            #  Error
print(b)            # Error
print(c)            #  Error



 # Find outputs  (Home  work)
a = [10 , 20 , 15 , 18]
print(a)----->[10,20,15,18]
del  a[2]
print(a)-->[10,20,18]
del  a-->variable a
print(a)-->
print(a[0])--->error



  # Find outputs  (Home  work)
a = [10 , 20 , 15 , 18]
print(a)-->[10,20,15,18]
del  a[2]
print(a)--->[10,20,18]
del  a
print(a)
print(a[0])
