# Find  outputs  (Home  work)
for  i   in   range(1 , 8):
	print(i)
	if  i % 3  == 0:
			continue
	else:
			print('Sec')
	print('Hello')
# End of loop
print('Outside loop')# sec
Hello
Sec hello
Sec Hello
Sec hello




 # Identify Error  (Home  work)
if ():
	print('Hyd')
	continue
	print('Sec')#no while or for loop for the continue statement

 # Find outputs (Home  work)
for  i   in   range(1 , 8):
	print(i)
	if   i % 3 == 0:
		break
	else:
		print('Sec')
	print('Hello')
# End  of  the  loop
print('Outside loop')#1
Sec
Hello
3
Outside of the loop

# Identify Error  (Home  work)
if(10 , 20 , 30):
	print('Hyd')
	break
	print('Sec')#no for or while loop

 # Find  outputs  (Home  work)
for  i   in   range(1 , 8):
	print(i)
	if   i % 3 == 0:
		pass
		print('Hyd')
	else:
		print('Sec')
	print('Hello')
# End  of  the  loop
print('Outside loop')#
Hyd
Sec hello
Hyd
Sec hello
Sec hello 
Hyd
Sec hello
Outside of the loop


# Find  outputs  (Home  work)
for  i   in   range(1 , 8):
	print(i)
	if   i % 3 == 0:
		exit()
	else:
		print('Sec')
	print('Hello')
# End  of  the  loop
print('Outside loop')#
Sec hello
Sec hello
Sec hello
Sec hello

# Find  outputs  (Home  work)
for  i  in  range(1 , 8):
	print(i)
	if   i % 3 == 0:
		continue
	else:
		print('Sec')
	print('Hello')
else:
	print('else  suite')
# End  of  the  loop
print('Outside  loop')#sec hello else suite 
sec hello else suite 
sec hello else suite 
sec hello else suite 
Outside loop




# Find  outputs  (Home  work)
for  i  in  range(1 , 8):
	print(i)
	if  i % 3 == 0:
		break
	else:
		print('Sec')
	print('Hello')
else:
	print('else  suite')
#End   of  the  loop
print('Outside  loop')#1
Sec
Hello
2
Sec
Hello
3
Outside loop


# Find  outputs  (Home  work)
for  i  in  range(1 , 8):
	print(i)
	if  i == 8:
		break
	else:
		print('Sec')
	print('Hello')
else:
	print('else  suite')
# End  of  the  loop
print('Outside loop')#1
Sec
Hello
2
Sec
Hello
3
Sec
Hello
4
Sec
Hello
5
Sec
Hello
6
Sec
Hello
7
Sec
Hello
else suite
Outside loop

# List of elements'''
Write  a  program  to  search  for  an  element  in  the  list  without  using  in  operator  and
print  Found  or  Not  Found  message  (Assume  that  there  are  no  duplicates)

Let  list  be   [10 , 20 , 15 , 12 , 18]
1) What  is  the  output  if  15  is  seacrhed ?  --->  Found  at  index  2

2) What  is  the  output  if  19  is  seacrhed ?  --->  Not  found

3) What  action  to  be  made  when  'x'  does  not  match  with  the  current  element  of  list ?  --->
																						Compare  'x'  with  next  element  of  list

4) What  action  to  be  made  when  'x'  matches   with  list  element ?  --->
																				Print  found   message  along  with  index  and
																				do  not  search  for  'x'  in  rest  of  the  list

5) What  action  to  be  made  when  'x'   does  not  match  with  all  the  elements  of  list ?  --->
																										Print  not  found   message

6) Hint: Use  for  loop
'''
lst = [10, 20, 15, 12, 18]

# Element to search
x = 15  # Try with 19 also to test "Not found"

# Flag to check if element is found
found = False

# Loop through list using index
for i in range(len(lst)):
    if lst[i] == x:
        print(f"{x} is found at index {i}")
        found = True
        break  # Stop after finding the element

# After loop, if not found
if not found:
    print("Not found")



'''
Write  a  program  to  search  for  an  element  in  the  list  and  print  index  of  each  element
and  also  number  of  times  it  is  found (Assume  that  list  may  contain  duplicate  elements)

List :   [10 , 20 , 15 , 12 , 18 , 15 , 19 , 14 , 15 , 14]

Search  for  15

Outputs :  15  is  found  at  index  2
                 15  is  found  at  index  5
                 15  is  found  at  index  8
                 15  is  found   3  times
'''#
# List with duplicates
lst = [10, 20, 15, 12, 18, 15, 19, 14, 15, 14]
x = 15
 found
count = 0
for i in range(len(lst)):
    if lst[i] == x:
        print(f"{x} is found at index {i}")
        count += 1

print(f"{x} is found {count} times")

#  Walrus   operator (:=)  demo  program
print(a := 25)#25 is printed and assigned 
print(a = 25)25 is assigned 
print(a)#25
print(a := 6 + 7)
print(a)#13 is assigned to a
print((a := 6) + 7)#13 is not assigned 
print(a)#6
print((a = 6) + 7)#13

# Find  outputs  (Home  work)
a = 0
if  a == 0:
	print('Hyd')
else:
	print('Sec')
if  b := 0:
	print('Hyd')
else:
	print('Sec : ' , b)
if  c = 0:
	print('Hyd')
else:
	print('Sec')#hyd Hyd sec

#  del  operator  demo program  (Home  work)
a = 25
print(a)#25
del   a
print(a)#a - reference is deleted 


 # Find  outputs  (Home  work)
a = b = c = 25
print(a , b , c)
del   a
print(b , c)#25
print(a)#deleted
del   b
print(c)#25
print(b)# error
del   c
print(c)#error


 #  Can  multiple  objects  be  deleted  with  same  del  operator ?
a , b , c = 25 , 10.8 , 'Hyd'
print(a , b , c)#25 , 10.8 , 'Hyd'
del   a , b , c
print(a)#error
print(b)#error
print(c)#error

# Find outputs  (Home  work)
a = [10 , 20 , 15 , 18]
print(a)# [10 , 20 , 15 , 18]
del  a[2]#15 is deleted 
print(a)#[10 , 20 , 18]
del  a
print(a)#error
print(a[0])#error

# Find outputs  (Home work)
a = (10 , 20 , 15 , 18)
print(a)#(10 , 20 , 15 , 18)
print(a[0])#10
del  a[2]#15 is deleted 
del  a# reference a is deleted 
print(a)#error
print(a[0])#error
