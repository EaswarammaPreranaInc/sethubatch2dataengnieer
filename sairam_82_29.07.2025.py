# -*- coding: utf-8 -*-
"""SSSDP 29-07-2025.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wKSo3TcFTgTiN73A-h2kPSUKgcNxtEcH
"""

#1) Program to check if a year is a leap year or not

year = int(input("Enter a year: "))

if (year % 400 == 0 or (year % 4 == 0 and year % 100 != 0)):
    print(year, "is a leap year")
else:
    print(year, "is not a leap year")

#2) Temperature conversion program with integer choice input

a = int(input("Enter 1 to convert celsius to farenheit and 2 to convert fahrenheit to celsius : "))

if a == 1:
    celsius = float(input("Enter celsius temperature : "))
    fahrenheit = 1.8 * celsius + 32
    print("Fahrenheit Equivalent : ", round(fahrenheit, 2))
elif a == 2:
    fahrenheit = float(input("Enter fahrenheit temperature : "))
    celsius = (fahrenheit - 32) / 1.8
    print("celsius equivalent : ", round(celsius, 2))
else:
    print("Invalid input")

#3) Program to determine the location of a point (x, y)

x = float(input("Enter the x-coordinate: "))
y = float(input("Enter the y-coordinate: "))

if x == 0 and y == 0:
    print("The point lies at the origin.")
elif x == 0:
    print("The point lies on the y-axis.")
elif y == 0:
    print("The point lies on the x-axis.")
elif x > 0 and y > 0:
    print("The point lies in the 1st quadrant.")
elif x < 0 and y > 0:
    print("The point lies in the 2nd quadrant.")
elif x < 0 and y < 0:
    print("The point lies in the 3rd quadrant.")
elif x > 0 and y < 0:
    print("The point lies in the 4th quadrant.")
else:
    print("Invalid input")

#4)program  to  determine  largest , smallest  and  middle  of  three  numbers
a = float(input("Enter first number : "))
b = float(input("Enter second number : "))
c = float(input("Enter third number : "))

max = a
min = a

if b > max:
    max = b
if c > max:
    max = c

if b < min:
    min = b
if c < min:
    min = c

mid = (a + b + c) - (max + min)

print("Max:", max)
print("Min:", min)
print("Mid:", mid)

#5)program  to  determine  three  sides  form  a  triangle  or  not
import math

a = float(input("Enter side a: "))
b = float(input("Enter side b: "))
c = float(input("Enter side c: "))

if (a + b > c) and (a + c > b) and (b + c > a):
    if a == b == c:
        area = (math.sqrt(3) / 4) * a ** 2
        print("Triangle is equilateral.")
        print(f"Area: {area:.2f}")
    else:
        if (a == b) or (b == c) or (a == c):
            perimeter = a + b + c
            print("Triangle is isosceles.")
            print(f"Perimeter: {perimeter:.2f}")
        else:
            perimeter = a + b + c
            s = perimeter / 2
            area = math.sqrt(s * (s - a) * (s - b) * (s - c))
            print("Triangle is scalene.")
            print(f"Area: {area:.2f}")
            print(f"Perimeter: {perimeter:.2f}")
else:
    print("The sides do not form a valid triangle.")

#6) program  to  determine  roots  of  a  quadtratic  equation  a * x ^ 2 + b * x + c = 0  where  a  ! = 0
import math

a = float(input("Enter coefficient a (a != 0): "))
b = float(input("Enter coefficient b: "))
c = float(input("Enter coefficient c: "))

if a == 0:
    print("Invalid input! 'a' cannot be zero for a quadratic equation.")
else:
    disc = b ** 2 - 4 * a * c
    print(f"Discriminant: {disc}")

    if disc > 0:
        root1 = (-b + math.sqrt(disc)) / (2 * a)
        root2 = (-b - math.sqrt(disc)) / (2 * a)
        print("Roots are real and distinct.")
        print(f"Root 1: {root1}")
        print(f"Root 2: {root2}")

    elif disc == 0:
        root = -b / (2 * a)
        print("Roots are real and equal.")
        print(f"Root: {root}")

    else:
        real_part = -b / (2 * a)
        imag_part = math.sqrt(-disc) / (2 * a)
        root1 = complex(real_part, imag_part)
        root2 = complex(real_part, -imag_part)
        print("Roots are complex (imaginary).")
        print(f"Root 1: {root1}")
        print(f"Root 2: {root2}")

#7)program   to  determine  a  point (x , y)  lies  inside , outside  or  on  the  circle
import math

x = float(input("Enter x-coordinate of the point: "))
y = float(input("Enter y-coordinate of the point: "))
r = float(input("Enter radius of the circle: "))

distance = math.sqrt(x**2 + y**2)

if distance > r:
    print("The point lies outside the circle.")
elif distance < r:
    print("The point lies inside the circle.")
else:
    print("The point lies on the circle.")

#8) Find  outputs  (Home  work)
m = 4
match  m:
	case  1:
		print('One')
	case  2:
		print('Two')
	case  3:
		print('Three')
print('Bye') #Bye

#9) Identify  Error
i = 2
match  i:
	case  1:
		print('One')
	case  _:
		print('None of   the  above')
	case  2:
		print('Two')
print('Bye')
#Indentation Error

#10) Find  outputs  (Home  work)
m = 2
match  m:
	case  1:
		print('One')
	case  _:
		print('Hello')
	case  _:
		print('Bye')
print('End') #Error

#11)  Find  outputs  (Home  work)
m = 1
match  m:
	case  1:
		print('Hyd') #Hyd
	case  1:
		print('Sec')
	case  1:
		print('Cyb')
print('Bye')#Bye

#12) Find  outputs  (Home  work)
ch = 'B'
match  ch:
	case   'A':
		print('Apple')
	case  'B':
		print('Book') #Book
	case  'C':
		print('Cafe')
	case  _:
		print('None of  the  above')
print('Bye') #Bye

#13)
'''
1) What  are  the  outputs  if  input  is  -6 ? ---> Hyd Sec Cyb Bye
2) What  are  the  outputs  if  input  is  15  ?  ---> One Two Three Bye
3) What  are  the  outputs  if  input  is  10.8  ?  ---> India China Usa Bye
4) What  are  the  outputs  if  input  is  0  ?  ---> Hyd Sec Cyb Bye
5) What  are  the  outputs  if  input  is  -10  ?  ---> One Two Three Bye
6) What  are  the  outputs  if  input  is  7  ?  ---> Hyd Sec Cyb Bye
'''
x = eval(input('Enter any  number :  '))
match  x:
	case  7 |  -6  |  0:
		print('Hyd')
		print('Sec')
		print('Cyb')
	case  -10 | 15:
		print('One')
		print('Two')
		print('Three')
	case  _:
		print('India')
		print('China')
		print('Usa')
# End  of  match
print('Bye')

#14)
'''
1) What  is  the  output  when  input  is  (-10 , -20) ?  ---> Not  a  point
2) What  is  the  output  when  input  is  (10 , 0) ?  ---> x - axis
3) What  is  the  output  when  input  is  (0 , -20) ?  ---> y - axis
4) What  is  the  output  when  input  is  (0 , 0) ?  ---> Origin
5) What  is  the  output  when  input  is  (10 , 20 , 30) ?  ---> Not a point
6) What  is  the  output  when  input  is  [10 , 20]  ?  ---> Quadrant
7) What  is  the  output  when  input  is  [0 , -25]  ?  ---> y-axis
8) What  is  the  output  when  input  is  ()  ?  ---> Not a point
9) What  is  the  output  when  input  is  {10 , 20} ?  ---> Not a Point
10) What  is  the  output  when  input  is  (25,) ?  ---> Not a point
11) What  is  the  output  when  input  is  {10 : 20} ?  ---> Not a point
'''
tpl = eval(input('Enter  any  point  in  the  form  of  (x , y) :  '))
match  tpl:
	case  (0 , 0):
		print('Origin')
	case   (0 , y):
		print('y - axis')
	case   (x , 0):
		print('x - axis')
	case   (x , y):
		print('Quadrant')
	case  _:
		print('Not  a  point')

#15) program  to  determine  bill  amount  and  input  is  units
units = int(input('Enter units: '))
bill = 0
match units // 100:
    case 0:
        bill = units * 3.00
    case 1:
        bill = 100 * 3.00 + (units - 100) * 3.50
    case 2 | 3:
        bill = 100 * 3.00 + 100 * 3.50 + (units - 200) * 4.00
    case 4 | 5 | 6:
        bill = 100 * 3.00 + 100 * 3.50 + 200 * 4.00 + (units - 400) * 4.50
    case _:
        bill = 100 * 3.00 + 100 * 3.50 + 200 * 4.00 + 300 * 4.50 + (units - 700) * 5.00
print(f"Total bill amount for {units} units is: Rs. {bill:.2f}")

#16) program to print fibonacci series upto x
x = int(input("Enter the limit up to which Fibonacci series is printed: "))

a, b = 0, 1

while a <= x:
    print(a)
    a, b = b, a + b

#17)#  Find  outputs
while  True:
	print('Hello')
print('Bye') #Prints hello in loop

#18) Find  outputs
while  False:
	print('Hello')
print('Bye') #Bye

#19)Find Outputs
lst = [10, 20, 15, 18]
for n in lst:
    print(n) #10,20,15,18

print()

s = 'Hyd'
for ch in s:
    print(ch) #Hyd

print()

for i in range(5):
    print(i) #0 1 2 3 4

#20)Find Outputs
for x in {10: 20, 30: 40, 50: 60}.keys():
    print(x)  # 10
              # 30
              # 50
print()

for x in {10: 20, 30: 40, 50: 60}.values():
    print(x)  # 20
              # 40
              # 60
print()

for x in {10: 20, 30: 40, 50: 60}.items():
    print(x)  # (10, 20)
              # (30, 40)
              # (50, 60)
print()

for x in {10: 20, 30: 40, 50: 60}:
    print(x)  # 10
              # 30
              # 50

#21) Find outputs  (Home  work)
a = {10: 20, 30: 40, 50: 60}

for x, y in a.items():
    print(x, y, sep='...')     # 10...20
                               # 30...40
                               # 50...60

for x, y in a:
    print(x, y) #Error:
for x, y in {10: 20, 30: 40, 50: 60}:
    print(x, y, sep='...') #Error

#22) Identify  error  (Home  work)
for  x  in   123:
        print(x) #Typeerror

#23) Find  outputs  (Home  work)
for x in ():
    print(x)
for x in []:
    print(x)
for x in {}:
    print(x)
for x in set():
    print(x)
for x in '':
    print(x)
for x in range(10, 10):
    print(x)
for x in range():
    print(x)        #Error
for x in (25):
    print(x)        #Error

#24) Nested  Loop  demo  program
for i in range(1, 4):
    for j in range(1, 5):
        print(i, j)  # (1,1) (1,2) (1,3) (1,4) (2,1)......
print('Hello')       # Hello
print('Bye')         # Bye

#25) How  to  print  each  element  and  the  corresponding  index
a = [25, 10.8, 'Hyd', True]

print('Index-based for loop')
for i in range(len(a)):
    print(i, a[i])

print('\nFor each loop')
index = 0
for element in a:
    print(index, element)
    index += 1

print('\nUsing enumerate()')
for index, element in enumerate(a):
    print(index, element)

#26) #  How  to  print  list  elements  in  reverse  order   without  slice
a = [25, 10.8, 'Hyd', True]

print('Indexed for loop')
for i in range(len(a)-1, -1, -1):
    print(a[i])

print('\nFor each loop')
for element in reversed(a):
    print(element)

#27)  program  to  add  two  lists  and  store  results  in  3rd  list
a = eval(input('Enter 1st list : '))
b = eval(input('Enter 2nd list : '))
c = []

# Using index-based for loop
for i in range(min(len(a), len(b))):
    c.append(a[i] + b[i])

print('3rd list :', c)

#28)  program  to  add  two  lists  and  store  results  in  3rd  list
a = eval(input('Enter 1st list : '))
b = eval(input('Enter 2nd list : '))
c = []

b_iter = iter(b)

for element in a:
    c.append(element + next(b_iter))

print('3rd list :', c)

#29) How  to  print  list  elements  from  indexes  2  to  4  without  slice
a = [25, 10.8, 'Hyd', True, 3 + 4j, None, 'Sec']

print('Indexed for loop')
for i in range(2, 5):
    print(a[i])

print('\nFor each loop')
a_iter = iter(a)
for _ in range(2):
    next(a_iter)
count = 0
for element in a_iter:
    if count == 3:
        break
    print(element)
    count += 1

#30) #  Tricky  program
#  Find  outputs  (Home  work)

a = [10 , 20 , 15 , 18]
for  i  in  range(len(a)):
	a[i] +=  1
print('a :  ' , a) #a:11, 21, 16, 19
b = [10 , 20 , 15 , 18]
for  x  in   b:
	x += 1
print('b :  ' ,  b) #b:10, 20, 15, 18