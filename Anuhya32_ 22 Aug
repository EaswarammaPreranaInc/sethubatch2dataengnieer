#index()  and  count()  methods  demo  program   (Home  work)
a = (10 , 20 , 15 , 12 , 14 , 15 , 18 , 19 , 15 , 12 , 25)
#     0    1      2     3    4     5     6    7     8    9    10
try:
	i = a . index(15)
	while  True:
		print('15 is found at index : ' , i)
		i = a . index(15 , i + 1)
except:
		print(F'15  is  found  {a . count(15)}  times')

15 is found at index :  2
15 is found at index :  5
15 is found at index :  8
15 is found 3 times


#  How  to  modify  an  element  of  tuple ?    (Home  work)
a  =  10 ,  20 ,  30 ,   40 ,  50
#     0      1       2       3      4
a[2] = 35
print(a)
print(id(a))
How  to  modify  30  in  tuple  to  35
print(a)

Original tuple: (10, 20, 30, 40, 50)  id: 140...
Modified tuple: (10, 20, 35, 40, 50)  id: 141...

# How  to  delete  an  element  of  tuple ?   (Home  work)
a  = 10 , 20 , 30 , 40 , 50
#    0     1      2     3      4
a . remove(30)
del  a[2]
a . pop(2)
print(a)
print(id(a))
How  to  remove  30  from  tuple  'a'
print(a)
print(id(a))

Original tuple: (10, 20, 30, 40, 50)  id: 140...
Modified tuple: (10, 20, 40, 50)  id: 141...


#  Nested   tuple  (Home  work)
a = ( (10 , 20)  ,  (30 , 40 , 50)  ,  (60 , 70 , 80 , 90) )
print(a)
print(type(a))
print(len(a))
print(How  to  print  1st  inner  tuple)
print(How  to  print  2nd  inner  tuple)
print(How  to  print  3rd  inner  tuple)
print(How  to  print  20)
print(How  to  print  50)
print(How  to  print  90)

a = ( (10 , 20)  ,  (30 , 40 , 50)  ,  (60 , 70 , 80 , 90) )
print(a)               # prints the whole nested tuple
print(type(a))         # <class 'tuple'>
print(len(a))          # 3 

print(a[0])            # 1st inner tuple → (10, 20)
print(a[1])            # 2nd inner tuple → (30, 40, 50)
print(a[2])            # 3rd inner tuple → (60, 70, 80, 90)

print(a[0][1])         # 20
print(a[1][2])         # 50
print(a[2][3])         # 90


# Find  outputs  (Home  work)
a = ((10 , 20 , 30),)
print(How  to   print  inner  tuple)
print(How  to   print  inner  tuple  in  another  way)
print(How   to  print   10)
print(How   to  print   20)
print(How   to  print   30)
b = ((),)
print(How  to   print  inner  tuple  of  tuple  'b')
print(How  to   print  inner  tuple  of  tuple  'b'  in  another  way)

print(a[0])              # prints the inner tuple → (10, 20, 30)
print(a[-1])             # another way → (10, 20, 30)

print(a[0][0])           # prints 10
print(a[0][1])           # prints 20
print(a[0][2])           # prints 30
print(b[0])              # ()
print(b[-1]              #()

# How  to  print  set  in  differnet ways  (Home  work)
a = {25 , True , 'Hyd' , 10.8}
print('set  with  print  function')
print(a)    #  {25, True, 'Hyd', 10.8}
print('Iterate  elements  of  set  with  for  loop')  #
for x in a:
    print(x)
How  to  iterate  set  with  for  loop   #
for x in a:
    print(x)


#  Find  outputs  (Home  work)
print({(10 , 20 , 30)}) # {(10 , 20 , 30)}
print({[10 , 20 , 30]}) # Error 
print({{10 , 20 , 30}}) # Error 
print({{}}) # Error


# Find  outputs  (Home  work)
a = 'Hyd'
b = True
c = 25
d = 1
e = 'Hyd'
s = {a , b , c , d , e}
print(s)         # {'Hyd' , True , 25}
print(len(s))    # 3
print(type(s))   # <class 'set'>

# Find  outputs  (Home  work)
s = {'Hyd',  25,  True,  10.8 }
print(s)     # {25, 10.8, 'Hyd', True}
a , b , c , d = s
print(a)     # 25
print(b)     # 10.8
print(c)     # Hyd
print(d)     # True

# Find  outputs  (Home  work)
s = {'Hyd',  25,  True,  10.8 }
print(s)     # {25, 10.8, 'Hyd', True}
a , *b = s
print(a)     # 25
print(b)     # [10.8, 'Hyd', True]
print(type(b))   # <class 'list'>


# Find  outputs  (Home  work)
s = {'Hyd',  25,  True,  10.8 }
print(s)     # {25, 10.8, 'Hyd', True}
a , *b , c = s
print(a)     # 25
print(b)     # [10.8, 'Hyd']
print(c)     # True


# Find  outputs  (Home  work)
s = {20 , 10 , 20 , 10}
print(s)    # {10 , 20}
x , y = s
print(x)    # 10
print(y)    # 20


# set()  function  demo  program  (Home  work)
a = range(100 , 151 , 10)
b = set(a)
print(b)    # {100, 130, 140, 110, 150, 120}
c = [10 , 20 , 15 , 18 , 10 , 50 , 20 , 12 , 18]
d = set(c)
print(d)    # {10, 12, 15, 18, 50, 20}
e = set('Rama  rAo')
print(e)       # {'R', ' ', 'a', 'A', 'r', 'm', 'o'}
print(set(25))   # Error 
print(set())     # set ()


'''
set()  function
-----------------
1) What  does  set(sequence)  do ?  ---> Converts  sequence  to  set

2) What  does  set(No-args)  do ?  --->  Returns  an  empty  set

3) How  many  arguments  can  set()  function  take ?  ---> Zero  (or) One  but  not  more  than  one

4) Is  set(non-sequence)  valid ?  --->  No  becoz  argument  should  be  sequence
'''





print(id(a))
