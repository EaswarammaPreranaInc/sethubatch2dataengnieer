#  Find  outputs  (Home  Work)
a = [25 , 10.8 , 'Hyd' , True , 3 + 4j , None , 'Hyd' , 25]
print(a) #[25,10.8,'Hyd',True, 3+4j, None, 'Hyd' ,25]
print(*a) #25 10.8 Hyd True 3+4j None
print(type(a)) #<class 'List'>
print(id(a)) #address of list object 
print(len(a)) #8
a[2] = 'Sec' #
print(a) #Hyd is replaced with sec
print(a[2 : 5]) #Hyd True 3+4j

# append()  and  remove()  methods  (Home  work)
a = [ ] #a is assigned to list object 
print(a) #empty list is printed
a . append(25) #25 is added to the list
a . append(10.8) #10.8 is added to the list at the end
a . append('Hyd') #Hyd is added to the list at the end
a . append(True) #True is added to the list at the end
print(a) #[25 10.8 Hyd True]
a . remove('Hyd') #Hyd will be deleted from the list
print(a) #[25 10.8 True ]
a . remove('25') # 25 will be removed from list
print(a) #[10.8 True]


#  Find  outputs  (Home  work)
a = [25 , 10.8 , 'Hyd']
print(a) #address of list object
print(id(a)) #address of list is printed
print(a * 3) #[25, 10.8, 'Hyd', 25, 10.8, 'Hyd', 25, 10.8, 'Hyd']
print(a * 2) #[25, 10.8, 'Hyd', 25, 10.8, 'Hyd']
print(a * 1) #[25, 10.8, 'Hyd']
print(a * 0) #[] empty string
print(a * -1) #empty string
print(a * 4.0) #error the it should not float only int
a = a * 3 #[25 10.8 'Hyd' 25 10.8 'Hyd' 25 10.8 'Hyd']
print(a) #object code printed
print(id(a)) #address of list obj will be printed
a = [25]
print(a * a) # error

# list()  function  demo  program
a = list('Hyd') #a is assigned to list obj
print(a) #['H', 'y' 'd']
print(type(a)) #<class 'list'>
print(len(a)) #2
b = (10 , 20 , 15 , 18) #
print(list(b)) #[10, 20, 15, 18] 
print(list(range(5))) #[0, 1, 2, 3, 4]
print(list(25)) #error


'''
list()  function
-----------------
1) What  does  list(sequence)  do ?  --->  Converts  sequence  to  list

2) Is  list(non-sequence)  valid ?  --->   No  becoz  argument  should  be  sequence  only

3) What  does  list(No-args)  do ?  ---> Returns  an  empty  list  i.e.  []

4) Finally  list()  function  does  typecasting
'''


# Find  outputs
a = [ ] # a is reference is assigned to a list object
print(type(a)) #<class 'list'>
print(a) #id will be printed
print(len(a)) #0
b = list() 
print(b) #[]
print(len(b)) #0


# Slice  demo  program (Home  work)
#        0      1          2         3         4        5        6        7
list = [25 , 10.8 , 3 + 4j , 'Hyd' , True , None , 10.8 , 'Hyd']
#       -8     -7       -6        -5         -4      -3       -2        -1
print(list[2 : 7]) #[3+4j, 'Hyd', True, None, 10,8, ]
print(list[ : : ]) #[25, 10.8, (3+4j), 'Hyd', None, 10.8, 'Hyd', ]
print(list[:]) #  list[0 :  8 :  1]  --->  List  from  indexes  0  to  7  in  steps  of  1  i.e.  [25 , 10.8 , 3 + 4j , 'Hyd' , True , None , 10.8 , 'Hyd']
print(list[ : : -1]) #['Hyd', 10.8, none, 'Hyd', 3+4j, 10.8, 25]
print(list[ : : 2]) #[25, 3+4j, True, 10.8] 
print(list[1 : : 2]) #[10.8, 'Hyd', None, 'Hyd'] 
print(list[ : : -2]) #  list[-1 :  -9 : -2]  --->  List  from  indexes   -1  to  -8  in  steps  of   -2   i.e.  ['Hyd' , None , 'Hyd' , 10.8]
print(list[-2 : : -2]) #[10.8, True, 3+4j, 25]
print(list[1 : 4]) #[10.8, (3+4j), 'Hyd']
print(list[-4 : -1]) #[True, None, 10.8, ]
print(list[3 : -3]) #['Hyd', True]
print(list[2 : -5]) #[3+4j]
print(list[-1:-5]) #



#  Find  outputs  (Home  work)
#        0       1      2          3         4        5         6        7
list = [25 , 10.8 , 3+4j , 'Hyd' , True , None , 10.8 , 'Hyd']
x ,  y = list[3 : 5] # x is assigned to 'Hyd', y will be assigned to True
print('x : ' , x) #Hyd
print('y : ' , y) #True
for  x  in  list[2:7]: #3+4j <nextline> 'Hyd' <nextline> True <nextline> none <next> 10.8<next> 'Hyd'
	print(x)  #(3+4j)<nextline> 'Hyd' <nextline> True <nextline> none <next> 10.8


#  Find  outputs  (Home  work)
#     0     1     2    3     4
a = [10 , 20 , 30 , 40 , 50] # a is assigned to the list object
print(a , id(a)) #[10, 20, 30, 40, 50 and address wof list obj is printed
a[1 : 4] = [60 , 70]  #inlis [ 60, 70] is replaced at  elements  20 30 40 50
print(a , id(a)) # [10, 60, 70]
a[2: 4] = [100 , 200 ,  300] # elements replaced
print(a , id(a)) #[10,60, 100, 200, 300]

#  Find  outputs  (Home  work)
a =  [25] # a is assigned to the list object
print(a[1]) # err0r the list doesn't contain  1 index 
print(a[1:]) # error the list doesn't contain  1 index 



# Find  outputs  (Home  work)
a = (25)
b = 25,
c = 25
d = (25,)
print(type(a)) #<class 'int'>
print(type(b)) #<class 'tuple>
print(type(c)) #<class 'int'>
print(type(d)) #<class 'tuple'>
print(a * 4)   #100
print(b * 4)  #(25 25 25 25)
print(c * 4)  #100
print(d * 4)   #(25 25 25 25)



# tuple()  function  demo  program  (Home  work)
a = tuple('Hyd') # a tuople object is refered to a
print(a) # (H, y, d)
print(type(a)) # <class <tuple'>
print(len(a)) # 2
b = [10 , 20 , 15 , 18] # b is assigned to the list object 
print(tuple(b)) # (10, 20, 15, 18)
print(tuple(range(5)))  #(0, 1, 2, 3, 4)
print(tuple(25))  #error due to index 25 is not present in the tuple



'''
tuple()  function
-------------------
1) What  does  tuple(sequence)  do ?  --->  Converts  sequence  to  tuple

2) Is  tuple(non-sequence)  valid ?  ---> No  becoz  argument  should  be  sequence  only

3) What  does  tuple(No-args)  do ?  ---> Returns  an  empty  tuple
'''























