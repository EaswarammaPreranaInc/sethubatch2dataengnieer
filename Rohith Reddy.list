 # sum()  function  demo  program  (Home  work)
a = [25 , 10.8 , True]                  #elements of 'a' in a list
print(sum(a))                           #36.8
b= [3 + 4j , 5 + 6j]                    #elements of 'b' in a list
print(sum(b))                           #8+10j
c = [25 , 10.8 , True , 3 + 4j , False]
print(sum(c))#39.8+4j
d = [10 , 20 , 15 , 18]
print(sum(d))#63
e = [25 , 10.8 , 'Hyd' , True]
print(sum(e))#error


'''
What  does  sum(list)  do ?  ---> Returns  sum  of  list  elements
'''
[11:31 am, 18/8/2025] +91 99482 50500: #  Find  outputs
a = [[10 , 20 , 15 , 18]]
print(sum(a))
print(How  to  determine  sum  of  inner  list  elements)
print(How  to  determine  sum  of  inner  list  elements  in  another  way)
 # max()  and  min()  functions  demo  program  (Home  work)
a = [10 , 20 , 15 , 18 , 30, 5 , 12]
print(max(a))#30
print(min(a))#5
b = ['Rama' , 'Sita' , 'Rajesh' , 'Kiran' , 'Amar' , 'Vamsi' , 'Manohar']
print(max(b))#vamsi
print(min(b))#amar
c = [25 , 10.8 ,  3 + 4j , True]
print(max(c))
d = [25 , '35']
print(max(d))#Error
print(max([]))#Error
print(min([]))#Error


'''
1) What  does  max(list)  do ?  --->  Returns  largest  element  of  the  list

2) What  does  min(list)  do ?  --->  Returns  smallest  element  of  the  list
'''
 # list()  function  demo  program
a = (10 , 20 , 15, 18) #Tuple
b = list(a)#[10,20,15,18]
print(b)#[10,20,15,18]
print(type(b))#class<list>
print(a  is  b)#False
print(a == b)#False
 #  Find  outputs (Home  work)
a = range(4 , 10 , 2)#4,6,8
b = list(a)[4,6,8]
print(b)#[4,6,8]
print(type(b))class<list>
a = list('Vamsi')
print(a)#[v,a,m,s,i]
a = list()#[]
print(a)#[]
print(list(25))#Error
print(list(10.8))#Error
print(list(True))#Error
print(list(None))#Error


'''
1) What  does  list(sequence)  do ?  --->  Converts  sequence  to  list  and  returns  list

2) What  does  list(no-args)  do ?  ---> Returns  an  empty  list

3) What  does  list(non-sequence)  do ?  --->  Throws  error
'''
 # Find  outputs (Home  work)
a = ((10 , 20) , (30 , 40 , 50) , (60 , 70 , 80 , 90))
print(list(a))#[(10,20),(30,40,50),(60,70,80,90)]
b = { (10 , 20) , (30 , 40 , 50) , (60 , 70 , 80 , 90)}
print(list(b))#[(30,40,50),(10,20),(60,70,80,90)]
c = ([10 , 20] , (30 , 40) , {50 , 60})
print(list(c))#[(10,20),(30,40),{50,60}]

 # sorted()  function   demo  program
a = [10 , 20 , 15 , 5 , 12]
b = sorted(a) #sorted and new list sorted in ascending
print(b)#[5,10,12,15,20]
print(type(b))#class<list>
c = sorted(a , reverse = True)
print(c)#[20,15,12,10,5]
print(a)[10,20,15,5,12]


'''
sorted()  function
----------------------
1) What  does  sorted(list)  do  ?  ---> Returns  another  sorted  list

2) Is  argument  list  modified ?  --->  No  and  it  remains  unchanged

3) How  to  sort  list  in  descending  order ?  --->  sorted(list , reverse = True)

4) What  are  the  two  arguments  of  sorted()  function ?  --->  List  to  be  sorted
																												and
																					                  reverse = True  which  is  an  optional  argument
'''
 # Find  outputs  (Home  work)
a =['Rama',  'Rajesh',  'Amar',  'Sita',  'Vamsi'  ,  'Kiran'  , 'Rama  Rao']
b = sorted(a)#[Amar,Kiran,Rajesh,RamaRao,Sita,Vamsi]
print(b)
c = sorted(a , reverse = True)
print(c)#[vamsi,sita,ramarao,rajesh,kiran,amar]
print(a)#['Rama',  'Rajesh',  'Amar',  'Sita',  'Vamsi'  ,  'Kiran'  , 'Rama  Rao']

 # all()  function demo  program  (Home  work)
a = [12 > 10 , 5 < 20 , 30 == 30]
print(all(a))#True
b = [9 >= 6 , 12 <= 9 , 6 == 6]
print(all(b))#False
c = [25 , 10.8 , '' , True , 3+4j , 'Hyd']
print(all(c))#False
d = [10 , 0 , 20]
print(all(d))#False
e = []#True
print(all(e))#True


'''
all()  function
-----------------
1) What  does  all(list)  do ?  --->  Returns  True  when  every  element of  the  list  is  True  and  False  otherwise

2) When  does  it  return  False ?  --->  When  at  least  one  element  of  the  list  is  False

3) if  cond1  and  cond2  and  cond3  and  cond4:
    How  to  reduce  the  four  conditions  to  a  single  condition ?  --->  if  all([cond1 , cond2 , cond3 , cond4]):
'''
 # any()  function demo program  (Home  work)
a  = [12 > 18 , 5 < 20 , 35 == 30]
print(any(a))#True
b = [12 > 18 , 25 < 20 , 35 == 30]
print(any(b))#False
c = [0 , 0.0 , '' , 25 , 0 + 0j , False]
print(any(c))#True
d = [0 , 0.0 , '' , 0 + 0j , False]
print(any(d))#False
e = []
print(any(e))#True


'''
any()   function
-------------------
1) What  does  any(list)  do ?  ---> Returns  True  when  at  least  one  element  of  the  list  is  True  and  False  otherwise

2) When  does  it  return  False ?  ---> When  every  element  of  the  list  is  false

3) if  cond1  or  cond2  or  cond3  or  cond4:
     How  to  reduce  the  four  conditions  to  a  single  condition ?  ---> if  any([cond1 , cond2 , cond3 , cond4]):

4) all()  and  any()  functions  are  used  as  an  alternative  when  there  are  too  many  conditions  in  if  and  while
'''
[11:39 am, 18/8/2025] +91 99482 50500: # del  operator  demo  program (Home  work)
a = [10 , 20 , 15 , 18]
print(a)#[10 , 20 , 15 , 18]
del    a[2]#[10,20,18]
print(a)[10 , 20 , 15 , 18]
del  a[3]#Error
del  a#Error
print(a)#Error

 #  append()  method  demo  program (Home  work)
list = [10 , 20 , 15 , 18]
print(list)#[10 , 20 , 15 , 18]
list . append(19)
print(list)#[10 , 20 , 15 , 18,19]

 #  Find  outputs (Home  work)
list = []#[]
print(list)#[]
list . append(25)#[25]
list . append(10.8)#[25,10.8,]
list . append('Hyd')#[25,10.8,hyd]
list . append(True)#[25,10.8,hyd,True]
print(list)#[25,10.8,hyd,True]

 # Find  outputs  (Home  work)
list = []
for  x  in   range(0 , 50 , 10):
	list . append(x)
print(list)

# Find  outputs  (Home  work)
a = [10 , 20 , 30]
a . append('Hyd')
print(a)#[10 , 20 , 30,Hyd]
print(len(a))#4
print(How  to  print  4th  element  of  list  'a')#print(a[3])
print(How  to  print  'H')#print(a[3][0])
print(How  to  print  'y')#print(a[3][1])
print(How  to  print  'd')#print(a[3][2])

 # remove()  method  demo  program  (Home  work)
try:
	list = [10 , 20 , 15 , 18 , 15 , 12 , 15 , 19]
	list . remove(15)
	print(list)
	list . remove(25)
except:
	print('25  is   not  in  the  list')



'''
