# -*- coding: utf-8 -*-
"""sairam_82_25.07.2025.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wv3DS_H9zoCCUW_eqN5W2XdHd5qlUMvT
"""

#1  intersection()   method  demo  program (Home  work)
a = {10 , 20 , 30 , 40}
b = {30 , 40 , 50 , 60}
c = a . intersection(b)
print(c) #{40, 30}
print(type(c)) #<class 'set'
d = a & b
print(d)  #{40, 30}
print(type(d)) #<class 'set'>
print(c  is  d) #False
print(c  ==  d) #True

#2 difference()   method  demo  program  (Home  work)
a = {10 , 20 , 30 , 40}
b = {30 , 40 , 50 , 60}
c = a . difference(b)
print(c) #{10, 20}
print(type(c)) #<class 'set'>
d = a - b
print(d) #{10, 20}
print(type(d)) #<class 'set'>
print(c  is  d) #False
print(c  ==  d) #True

#3 symmetric_difference()   method  demo  program  (Home  work)
a = {10 , 20 , 30 , 40}
b = {30 , 40 , 50 , 60}
c = a . symmetric_difference(b)
print(c) #{10, 50, 20, 60}
print(type(c)) #<class 'set'>
d = a ^ b
print(d)  #{10, 50, 20, 60}
print(type(d)) #<class 'set'>
print(c   is   d) #False
print(c  ==   d) #True

#4 Find  outputs  (Home  work)
a = {x * x  for   x   in   range(10)}
print(a) #{0, 1, 64, 4, 36, 9, 16, 49, 81, 25}
print(type(a)) #<class 'set'>

#5 program  to  remove  duplicate  characters  of  the  string  using  set
s = input("Enter a string: ")
seen = set()
result = ''
for char in s:
    if char.lower() not in seen:
        result += char
        seen.add(char.lower())
print(result)

#6 program  to  remove  duplicate  elements  of   list  using  set

user_input = input("Enter a list with  duplicates : ")
lst = eval(user_input)
seen = set()
result = []
for item in lst:
    if item not in seen:
        result.append(item)
        seen.add(item)
print("List  without  duplicates:", result)

#7 program  to   obtain  common  elements  between  two  lists  using  sets
list1 = eval(input("Enter 1st list: "))
list2 = eval(input("Enter 2nd list: "))
common = list(set(list1) & set(list2))
print("Common elements:", common)

#8 How  to  access  values  of  dictionary (Home  work)
a = {'Empno': 25, 'Ename': 'Rama Rao', 'Sal': 1000.65}
print(a['Empno'])    # 25
print(a['Ename'])    # Rama Rao
print(a['Sal'])      # 1000.65

#9 How  to  modify  values  of  dictionary  (Home  work)
a  =  {'Empno'  :  25,  'Ename'  :  'Rama  Rao'  ,  'Sal'  :  1000.65  }
print(a)
print(id(a))
How  to  modify  1000.65  to  2000
How  to  modify  'Rama  Rao'  to  'Sita'
How  to  modify  25   to  35
print(a)
print(id(a))

#10 How  to  modify  values  of  dictionary  (Home  work)
a  =  {'Empno'  :  25,  'Ename'  :  'Rama  Rao'  ,  'Sal'  :  1000.65  }
print(a)
print(id(a))
a['Sal'] = 2000        # 2000
a['Ename'] = 'Sita'    # 'Sita'
a['Empno'] = 35        # 35
print(a)
print(id(a))

#11 How  to  append  key : value  pairs  to dictionary  (Home  work)
a  =  {'Empno'  :  25,  'Ename'  :  'Rama  Rao'  ,  'Sal'  :  1000.65  }
print(a)
a['Gender'] = 'M'      # Add 'Gender': 'M'
a['Married'] = True    # Add 'Married': True
print(a)

#12 Find  outputs (Home  work)
a = {}
a[10] = 'Rama'     # Append key 10 with value 'Rama'
a[20] = 'Sita'     # Append key 20 with value 'Sita'
a[15] = 'Rajesh'   # Append key 15 with value 'Rajesh'
a[18] = 'Kiran'    # Append key 18 with value 'Kiran'
print(a)

#13 How  to  remove  key : value  pairs  of  dictionary  (Home  work)
a = {'Empno': 25, 'Ename': 'Rama Rao', 'Sal': 1000.65}
print(a)              #{'Empno': 25, 'Ename': 'Rama Rao', 'Sal': 1000.65}
del a['Sal']
print(a)              # {'Empno': 25, 'Ename': 'Rama Rao'}

#14  in  and  not  in  operators  (Home  work)
a =  {10 : 20 , 30 : 40 , 50 : 60 , 70 : 80}
print(30  in  a . keys()) #True
print(60  in  a . keys()) #False
print(60  in  a . values()) #True
print(30  in  a . values()) #False
print(50  in  a) #True
print(20  in  a) #False
print(70  not  in  a . keys()) #False
print(40  not  in  a . values()) #False
print(25 not in a) #True

#15 What  are  the  outputs  if  input  is  {10: 'A', 20: 'B', 15: 'C' , 20 : 'D'}
a = input('Enter  dictionary  :  ')      #{10: 'A', 20: 'B', 15: 'C' , 20 : 'D'}
print(a)                                 #{10: 'A', 20: 'B', 15: 'C' , 20 : 'D'}
print(type(a))                           #<class 'str'>
b = eval(a)
print(b)                                 #{10: 'A', 20: 'D', 15: 'C'}
print(type(b))                           #<class 'dict'>

#16 Find  outputs  (Home  work)
a = {10 : 'Rama' , 20 : 'Sita' , 15 : 'Rajesh' , 18 : 'Kiran'}
b = {**a}
print(b) #{10: 'Rama', 20: 'Sita', 15: 'Rajesh', 18: 'Kiran'}
print(a  is  b) #False
print(a  ==  b) #True
c = a
print(a  is   c) #True
print(a==c) #True

#17 Find  outputs  (Home  work)
a = {10 : 'Rama' , 20 : 'Sita' , 15 : 'Rajesh'}
b = {18 : 'Kiran' , 14 : 'Amar' , 20  : 'Manohar'}
c = {25 : 'Ramesh' , 19 : 'Krishna' , 15 : 'Radha' , 14 : 'Srinivas'}
d = {*a , *b , *c}
print(d) #{10, 14, 15, 18, 19, 20, 25}
print(type(d)) #<class 'set'>
e = {**a , **b , **c}
print(e) #{10: 'Rama', 20: 'Manohar', 15: 'Radha', 18: 'Kiran', 14: 'Srinivas', 25: 'Ramesh', 19: 'Krishna'}
print(type(e)) #<class 'dict'>

#18 Find  outputs  (Home  work)
a = {10 : 20 , 30 : 40}
b = {30 : 50 , 10 : 60}
print(a + b) #Error
c = {**a , **b}
print(c) #{10: 60, 30: 50}
d =a|b
print(d) #{10: 60, 30: 50}

#19 program  to  create  a  dictionary  with  emp  names  and  salaries
a = {}
n = int(input("How many employees to enter "))
for _ in range(n):
    name = input("Enter employee name: ")
    salary = float(input("Enter salary for {}: ".format(name)))
    a[name] = salary
print("Employee Details:", a)

#20 program  to  convert  a  string  to  dictionary
input_str = input("Enter dictionary : ")
pairs = input_str.split(' , ')
result = {}
for pair in pairs:
    key, value = pair.split(' = ', 1)
    value = value.strip()
    if value.isdigit():
        value = int(value)
    else:
        try:
            value = float(value)
        except ValueError:
            pass  # keep as string if conversion fails
    result[key.strip()] = value
print("Resulting dictionary:", result)

#21 len()  function  demo  program  (Home  work)
a  =  {'Empno'  :  25,  'Ename'  :  'Rama  Rao'  ,  'Sal'  :  1000.65  }
print(len(a)) #3
b = {}
print(len(b)) #0

#22 sum()  function demo  program  (Home  work)
a = {10 : 20 , 30 : 40 , 50 : 60}
print(sum(a . keys())) #90
print(sum(a . values())) #120
print(sum(a)) #90
print(sum(a.items())) #Error

#23 max()  and  min()   functions  demo  program  (Home  work)
a = {10 : 20 , 30 : 25 , 40 : 5 , 7 : 28 , 9 : 50}
print(max(a . keys())) #40
print(min(a . keys())) #7
print(max(a . values())) #50
print(min(a . values())) #5
print(max(a . items())) #(40, 5)
print(min(a . items())) #(7, 28)
print(max(a)) #40
print(min(a)) #7

#24 dict()  function  demo program (Home  work))
a = [(10, 'Hyd'), (20, 'Sec'), (15, 'Cyb'), (20, 'Pune')]
b = dict(a)
print(b) # {10: 'Hyd', 20: 'Pune', 15: 'Cyb'}
c = (['R', 'Red'], ['G', 'Green'], ['B', 'Blue'], ['G', 'Gray'])
d = dict(c)
print(d) #{'R': 'Red', 'G': 'Gray', 'B': 'Blue'}
e = [[10, 20, 30], [40, 50, 60], [70, 80, 90]]
print(dict(e)) #{10: 20, 40: 50, 70: 80}
f = [[10], [20], [30]]
print(dict(f)) # Error
g = [[10, [20, 30]], [40, [50, 60]], [70, [80, 90]]]
print(dict(g)) # {10: [20, 30], 40: [50, 60], 70: [80, 90]}
h = [[[10, 20], 30], [[40, 50], 60], [[70, 80], 90]]
print(dict(h)) # Output: {(10, 20): 30, (40, 50): 60, (70, 80): 90}
i = [[(10, 20), 30], [(40, 50), 60], [(70, 80), 90]]
print(dict(i)) #{(10, 20): 30, (40, 50): 60, (70, 80): 90}

#25 a = {10 : 'Red' , 20 : 'Green' , 15 : 'Blue' , 18 : 'Yellow' , 5 : 'White'}
b = sorted(a . keys()) #Error
print(b) #Error
c = sorted(a . values()) #Error
print(c)
#d = sorted(a . items()) #Error
print(d)
f  = sorted(a  , reverse = True)
print(f)   #[(20, 'Sec'), (20, 'Pune'), (15, 'Cyb'), (10, 'Hyd')]
print(a)   #[(10, 'Hyd'), (20, 'Sec'), (15, 'Cyb'), (20, 'Pune')]

#26 program  to  sort  dictionary  wrt  keys  (Home  work)
user_input = input("Enter dictionary as key:value pairs separated by commas: ")
my_dict = {}
for pair in user_input.split(","):
    key, value = pair.split(":")
    my_dict[int(key)] = value
sorted_dict = {key: my_dict[key] for key in sorted(my_dict)}
print("Sorted dictionary:", sorted_dict)

#27 clear()  method  demo  program (Home  work)
a = {10 : 20 , 30 : 40 , 50 : 60}
print(a) #{10: 20, 30: 40, 50: 60}
a . clear()
print(a) #{}
del a
print(a) #Error : a is deleted

#28 copy()  method demo  program  (Home  work)
a = {'R' : 'Red' , 'G' : 'Green' , 'B' : 'Blue'}
b = a . copy()
print(b) #{'R' : 'Red' , 'G' : 'Green' , 'B' : 'Blue'}
print(a  is  b) #False
print(a==b) #True

#29 keys()  method  demo  program
a = {10 : 'Hyd' , 20 : 'Sec' , 15 : 'Cyb' , 18 : 'Pune'}
b = a . keys()
print(b) #dict_keys([10, 20, 15, 18])
print(type(b)) #<class 'dict_keys'>
for  x  in   b:
        print(x) #10
                 #20
                 #15
                 #18

#30 values() method
a = {10 : 'Hyd' , 20 : 'Sec' , 15 : 'Cyb' , 18 : 'Pune'}
b = a.values()
print(b)           # dict_values(['Hyd', 'Sec', 'Cyb', 'Pune'])
print(type(b))     # <class 'dict_values'>
for x in b:
    print(x)       # Hyd # Sec  # Cyb # Pune

#31 items()method
a = {10 : 'Hyd' , 20 : 'Sec' , 15 : 'Cyb' , 18 : 'Pune'}
b = a.items()
print(b)            # dict_items([(10, 'Hyd'), (20, 'Sec'), (15, 'Cyb'), (18, 'Pune')])
print(type(b))      # <class 'dict_items'>
for x in b:
    print(x)        # (10, 'Hyd') # (20, 'Sec') # (15, 'Cyb') # (18, 'Pune')
for x, y in b:
    print(x, y, sep=' ... ')  # 10 ... Hyd # 20 ... Sec # 15 ... Cyb # 18 ... Pune

#32 Find  outputs  (Home  work)
a = {10 : 'Hyd' , 20 : 'Sec' , 15 : 'Cyb' , 18 : 'Pune'}
for x , y in a.items():
    print(x , y , sep = ' ... ') # 10 ... Hyd # 20 ... Sec # 15 ... Cyb # 18 ... Pune
for x , y in a.keys():
    print(x , y , sep = ' ... ') # Error: keys() returns only keys, cannot unpack into two variables
for x , y in a.values():
    print(x , y , sep = ' ... ') # Error: values() returns only values, cannot unpack into two variables
for x , y in a:
    print(x , y , sep = ' ... ') # Error: iterating a dictionary gives only keys, cannot unpack into two variables

#33 Find  outputs  (Home  work)
a = {10 : 'Rama' , 20 : 'Sita' , 15 : 'Rajesh'}
x , y , z = a . keys()
print(x)  # 10
print(y)  # 20
print(z)  # 15
print()
x , y , z = a . values()
print(x)  # Rama
print(y)  # Sita
print(z)  # Rajesh
print()
x , y ,  z = a . items()
print(x)  # (10, 'Rama')
print(y)  # (20, 'Sita')
print(z)  # (15, 'Rajesh')
print()
(rno1 , sname1) , (rno2 , sname2) , (rno3 , sname3) = a . items()
print(rno1 , sname1)  # 10 Rama
print(rno2 , sname2)  # 20 Sita
print(rno3 , sname3)  # 15 Rajesh

#34 program  to  determine  frequency  of  each  alphabet  in  the  string   in   alphabetical  order (ignoring  the  case)
s = input("Enter the string: ")
s = s.upper()
lst = sorted(s)
a = {}
for ch in lst:
    if ch.isalpha():
        a[ch] = a.get(ch,0)+1
print(a)