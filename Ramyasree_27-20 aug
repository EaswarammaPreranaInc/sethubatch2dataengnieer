# Write  a  program  to  create  a  list  with  cubes  of  2 , 4 , 6 , 8 , 10  with  list  comprehension (Home  work)

nums = [2, 4, 6, 8, 10]
cubes = [x**3 for x in nums]
print("Numbers:", nums)
print("Cubes:", cubes)

Numbers: [2, 4, 6, 8, 10]
Cubes: [8, 64, 216, 512, 1000]


 '''
(Home  work)
Write  a  program  to  extract  1st  character  of  each  string  in  capital  letters  in  a  list  of  srings  without  comprehension

Let  input  be   ['hyd' , 'pune' , 'chennai' , 'vijayawada']
What  is  the  output ?  ---> ['H' , 'P' , 'C' , 'V']
'''

         
cities = ['hyd', 'pune', 'chennai', 'vijayawada']

result = []

for city in cities:
  
    result.append(city[0].upper())

print(result)


Enter  list  of  lower  case  strings :  ['hyd' , 'pune' , 'chennai' , 'vijayawada']
['H', 'P', 'C', 'V']


'''
(Home  work)
Repeat   previous  program  with  comprehension

Input :  ['hyd' , 'pune' , 'chennai' , 'vijayawada']

Output :  ['H' , 'P' , 'C' , 'V']
'''


         
cities = ['hyd', 'pune', 'chennai', 'vijayawada'
result = [city[0].upper() for city in cities]

print(result)


 Enter  list  of  lower  case  strings :  ['hyd' , 'pune' , 'chennai' , 'vijayawada']
['H', 'P', 'C', 'V']



'''
Write  a  program  to  append  each  word  of  the  sentence  and  its  length  to  a  list
(word  should  be  in  capital  letters)  without  comprehension

Let  input  be   hyd  is  green  city
What  is  the  output ?  --->  [['HYD' , 3] , ['IS' , 2] , ['GREEN' , 5] , ['CITY', 3]]
'''


sentence = "hyd is green city"
words = sentence.split()

result = []
for word in words:
    
    result.append([word.upper(), len(word)])

print(result)

[['HYD', 3], ['IS', 2], ['GREEN', 5], ['CITY', 4]]


          
          
'''
(Home  work)
Repeat   previous  program  with  comprehension

Input :  hyd  is  green  city

Output :  [['HYD' , 3] , ['IS' , 2] , ['GREEN' , 5] , ['CITY' , 4]]
'''


s = "hyd is green city"

result = [[word.upper(), len(word)] for word in s.split()]

print(result)

          
[['HYD', 3], ['IS', 2], ['GREEN', 5], ['CITY', 4]]


'''
Write  a  program  to  add  two  lists  of  unequal  length  without  comprehension

Let  1st  list  be  [10 , 20 , 30 , 40 , 50 , 60 , 70]  and  2nd  list  be  [100 , 200 , 300 , 400]
What  is   the  result ?  ---> [10 + 100 , 20 + 200 , 30 + 300 , 40 + 400]
'''


a = [10, 20, 30, 40, 50, 60, 70]
b = [100, 200, 300, 400]

result = []
for i in range(len(b)):  
    result.append(a[i] + b[i])

print(result)


Enter 1st  list: [10,20,30,40,50,60,70]
Enter 2nd list:[100,200,300,400]
Output:[110, 220, 330, 440]



'''
Write   a  program  to  initialize  a  nested  list  with  zeroes  without  comprehension

Let inputs  be  3  and  4
What  is  the  output ?  --->  [[0 , 0 , 0 , 0] , [0 , 0 , 0 , 0] , [0 , 0 , 0 , 0]]

Hint:  Use  repetition  operator  *
'''


          
rows = 3
cols = 4

nested_list = []
for i in range(rows):
    nested_list.append([0] * cols)

print(nested_list)


          
 How  many  lists  ?  :  3
How  many  elements  in  each  list ?  :  4
[[0, 0, 0, 0 ], [0, 0, 0, 0 ], [0, 0, 0, 0]]



'''
(Home  work)
Repeat   previous  program  with  comprehension

Inputs :  3  and  4

Output :  [[0 , 0 , 0 , 0] , [0 , 0 , 0 , 0] , [0 , 0 , 0 , 0]]
'''


rows = 3
cols = 4

nested_list = [[0 for j in range(cols)] for i in range(rows)]

print(nested_list)


How  many  lists  ?  :  3
How  many  elements  in  each  list ?  :  4
[[0, 0, 0, 0 ], [0, 0, 0, 0 ], [0, 0, 0, 0]]

                
          
'''
Write  a  program  to  extract  those  elements  of  1st  list  which  are  not  in  2nd  list   without  comprehension

Let  1st  list  be  [10 , 20 , 15 , 18 , 25 , 32]  and  2nd  list  be  [30 , 40 , 10 , 25 , 15]
What  is  the  output ?  --->  [20 , 18 ,  32]
'''


a = [10, 20, 15, 18, 25, 32]
b = [30, 40, 10, 25, 15]

result = []
for x in a:
    if x not in b:
        result.append(x)

print(result)


Enter 1st  list  :  [10,20,15,18,25,32]
Enter 2nd  list  :  [30,40,10,25,15]
Elements  of  1st  list  which  are  not  in  2nd  list  :   [20, 18, 32]




'''
(Home  work)
Repeat   previous  program  with  comprehension

Input1 :   [10 , 20 , 15 , 18 , 25 , 32]
Input2 :  [30 , 40 , 10 , 25 , 15]
Output :  [20 , 18 , 32]
'''


a = [10, 20, 15, 18, 25, 32]
b = [30, 40, 10, 25, 15]

result = [x for x in a if x not in b]

print(result)


          
Enter 1st  list  :  [10,20,15,18,25,32]
Enter 2nd  list  :  [30,40,10,25,15]
Elements  of  1st  list  which  are  not  in  2nd  list  :   [20, 18, 32]


#  Write   a  program  to  print  even  numbers  between  1  and  20  with  comprehension

evens = [x for x in range(1, 21) if x % 2 == 0]
print(evens)

 Even numbers  between  1  and  20 :   [2, 4, 6, 8, 10, 12, 14, 16, 18, 20]

         
 '''
Repeat  previous  program  with  comprehension  and  without  using  if

Output: [Even  numbers  between  1  and  20]
'''


         
evens = [x for x in range(2, 21, 2)]
print(evens)


 Even numbers  between  1  and  20 :   [2, 4, 6, 8, 10, 12, 14, 16, 18, 20]


'''
Write  a  program  to  print  those  squares  of  1 , 2 , 3 , 4 , ... 20  which  are  divisible   by  2  with  comprehension

What  is  the  output ?  ---> [4 , 16 , 36 , ... ,  400]
'''

         
squares = [x**2 for x in range(1, 21) if (x**2) % 2 == 0]
print(squares)

Squares  of  1  to  20  which  are  divisible  by   2 :   [4, 16, 36, 64, 100, 144, 196, 256, 324, 400]
           

#  Repeat  previous  program  with  comprehension  and  without  using  if

squares = [x**2 for x in range(2, 21, 2)]
print(squares)

Squares  of  1  to  20  which  are  divisible  by   2 :   [4, 16, 36, 64, 100, 144, 196, 256, 324, 400]



           
'''
Write  a  program  to  add  each  element  of  1st  list  with  all  the  elements  of  2nd  list  without  comprehension

Let  1st  list  be  [10 , 20 , 15]  and  2nd  list  be  [30 , 40 , 35 , 32]
What  is  the  result ?  --->
					[10 + 30 , 10 + 40 , 10 + 35 , 10 + 32 , 20 + 30 , 20 + 40 , 20 + 35 , 20 + 32 , 15 + 30 , 15 + 40 , 15 + 35 , 15 + 32]

Hint : Nested  for  loops
'''

           
a = [10, 20, 15]
b = [30, 40, 35, 32]

result = []
for x in a:
    for y in b:
        result.append(x + y)

print(result)


Enter 1st list : [10,20,15]
Enter 2nd list : [30,40,35,12]
[40, 50, 45, 22, 50, 60, 55, 32, 45, 55, 50, 27]


'''
(Home  work)
Repeat   previous  program  with  comprehension

Input1 :  [10 , 20 , 15]
Input2 :  [30 , 40 , 35 , 32]
Output :  [10 + 30 , 10 + 40 , 10 + 35 , 10 + 32 , 20 + 30 , 20 + 40 , 20 + 35 , 20 + 32 , 15 + 30 , 15 + 40 , 15 + 35 , 15 + 32]
'''


           .
a = [10, 20, 15]
b = [30, 40, 35, 32]

result = [x + y for x in a for y in b]

print(result)



Enter 1st list : [10,20,15]
Enter 2nd list : [30,40,35,12]
[40, 50, 45, 22, 50, 60, 55, 32, 45, 55, 50, 27]


'''
Write  a  program  to  concatenate  each  character  of  1st  string  with  every  character  of   2nd  string  with  comprehension

Let  1st string  be  HYD  and   2nd string  be   PUNE
What  is  the  result  ?  --->  ['HP' , 'HU' , 'HN' , 'HE' , 'YP' , 'YU' , 'YN' , 'YE' , 'DP' , 'DU' , 'DN' , 'DE']

Hint: Same  as  previous  program
'''



s1 = "HYD"
s2 = "PUNE"

result = [ch1 + ch2 for ch1 in s1 for ch2 in s2]

print(result)


['HP', 'HU', 'HN', 'HE', 'YP', 'YU', 'YN', 'YE', 'DP', 'DU', 'DN', 'DE']


 '''
Write  a  program  to  convert  a  nested  list  to  list  without  comprehension

Let  input  be  [ [10 , 20] , [30 , 40 , 50] , [60 , 70 , 80 , 90]]
What  is  the  output ?  --->  [10 , 20 , 30 , 40 , 50 , 60 , 70 , 80 , 90]
'''

nested = [[10, 20], [30, 40, 50], [60, 70, 80, 90]]

flat = []
for sublist in nested:
    for item in sublist:
        flat.append(item)

print(flat)




'''
Write  a  program  to  convert  a  nested  list  to  list  with  comprehension

Let  input  be  [ [10 , 20] , [30 , 40 , 50] , [60 , 70 , 80 , 90]]

What  is  the  output ?  --->  [10 , 20 , 30 , 40 , 50 , 60 , 70 , 80 , 90]
'''


          
nested = [[10, 20], [30, 40, 50], [60, 70, 80, 90]]

flat = [item for sublist in nested for item in sublist]

print(flat)


Enter nested list : [ [10 , 20] , [30 , 40 , 50] , [60 , 70 , 80 , 90]]
[10, 20, 30, 40, 50, 60, 70, 80, 90]


        

# Find  outputs (Home  work)
a = [[10 , 20] , [30 , 40 , 50] , [60 , 70 , 80 , 90]]
b = [ x  for  x  in  a  for  y  in  x]
print(b)


a = [[10 , 20] , [30 , 40 , 50] , [60 , 70 , 80 , 90]]

b = [x for x in a for y in x]

print(b)   # Output:
# [[10, 20], [10, 20], [30, 40, 50], [30, 40, 50], [30, 40, 50],
#  [60, 70, 80, 90], [60, 70, 80, 90], [60, 70, 80, 90], [60, 70, 80, 90]]

#  Nested  comprehension  demo  program (Home  work)
a = [ [ j  for   j  in   range(i)]   for   i   in   range(5)]
print(a)


a = [[j for j in range(i)] for i in range(5)]

print(a)    [[], [0], [0, 1], [0, 1, 2], [0, 1, 2, 3]]




      
'''
Most  tricky  program
Input :   List  of  strings
              Eg: ['Swathi' , 'Anand' , 'Srinivas' , 'Zebra' , 'King' , 'Amar' ]
Output :  Nested  list
		        i.e.  [['Swathi' , 'Srinivas'] , ['Anand' , 'Amar'] , ['Zebra'] , ['King']]

Hint: Do  not  sort  the  lists

1) b = ['S' , 'A' ,  , 'Z' , 'K' ]

2) c = []

3) Iteartion  1 :  d  = ['Swathi' , 'Srinivas']
                           c =  [['Swathi' , 'Srinivas']]

4) Iteartion  2 :  d  =  ['Anand' , 'Amar']
                           c =   [['Swathi' , 'Srinivas'] , ['Anand' , 'Amar']]

5) Iteartion  3 :  d  =  ['Zebra']
                           c =   [['Swathi' , 'Srinivas'] , ['Anand' , 'Amar'] , ['Zebra']]

6) Iteartion  4 :  d  =  ['King']
                           c =   [['Swathi' , 'Srinivas'] , ['Anand' , 'Amar'] , ['Zebra'] , ['King']]
'''


a = ['Swathi', 'Anand', 'Srinivas', 'Zebra', 'King', 'Amar']

b = []   
c = []   

for name in a:
    first = name[0] 
    if first in b:   
        index = b.index(first)
        c[index].append(name)
    else:           

print(c)
      
     
'''
Write  a  program  to  determine  n-th  largest  element   of   a   list

Input1 :  [10,20,30,25,40,35,12,5]
Input2 :  3  (3rd  largest)
Output :  30
'''


a = [10, 20, 30, 25, 40, 35, 12, 5]
n = 3   

print(a[n-1])



a = [10, 20, 30, 25, 40, 35, 12, 5]
n = 3   

a.sort(reverse=True)

print(a[n-1])


'''
Write  a  program  to  sort a  list  without  using  sorted()  function  and  sort()  method

Input :  [10,20,30,25,40,35,12,5]
Output :  [5,10,12,20,25,30,35,40]
'''


      
a = ['Swathi', 'Anand', 'Srinivas', 'Zebra', 'King', 'Amar']

b = []   
c = []   

for name in a:
    first = name[0]
    if first in b:   
        index = b.index(first)
        c[index].append(name)
    else:             
        b.append(first)
        c.append([name])

print(c)      
      

      
           
