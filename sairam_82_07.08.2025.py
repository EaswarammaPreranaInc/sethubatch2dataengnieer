# -*- coding: utf-8 -*-
"""sairam_82_07.08.2025.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1e4NUMIjoHyr_lL92x2_LWDV3NfexYf0o
"""

#1) program  to  determine  largest  command  line  input

inputs = input("Enter values separated by spaces: ").split()

if not inputs or inputs == ['']:
    print("Pls send inputs")
else:
    is_all_numbers = True
    is_all_strings = True
    a = []
    for item in inputs:
        try:
            num = float(item)
            a.append(num)
        except ValueError:
            is_all_numbers = False
        else:
            is_all_strings = False
    if is_all_strings:
        a = inputs
    print("What is list 'a' ?  --->", a)
    if is_all_numbers:
        print("What is the largest command line input ?  --->", max(a))
    elif is_all_strings:
        print("What is the largest command line input ?  --->", max(a))
    else:
        print("Inputs can not be number and string")

#2)  program  to  determine  command  line  input  is  even  number  or  odd  number

value = input("Enter an integer: ")

try:
    n = int(value)
    if n % 2 == 0:
        print("Even number")
    else:
        print("Odd number")
except:
    print("Pls send an integer input")

#3) program  to  determine  average  of  command  line  inputs

values = input("Enter number inputs separated by spaces: ").split()
a = []
is_all_numbers = True

for item in values:
    if item.lower() == 'true':
        a.append(1)
    elif item.lower() == 'false':
        a.append(0)
    else:
        try:
            num = float(item)
            a.append(num)
        except ValueError:
            is_all_numbers = False
            break

if not values or not is_all_numbers:
    print("Pls send number inputs")
else:
    print("What is list 'a' ?  --->", a)
    avg = sum(a) / len(a) if len(a) > 0 else 0
    print("Average of inputs ?  --->", avg)

#4)program  to  sort  command  line  inputs  in  ascending  order  and  descending  order

import sys

argv = sys.argv
print("What is argv ?  --->", argv)

if len(argv) == 1:
    print("Pls send number inputs")
else:
    inputs = argv[1:]
    a = []
    is_all_numbers = True
    is_all_strings = True

    for item in inputs:
        try:
            num = float(item)
            a.append(num)
            is_all_strings = False
        except ValueError:
            is_all_numbers = False

    if is_all_numbers:
        print("What is list 'a' ?  --->", a)
        print("Ascending order : ", sorted(a))
        print("Descending order : ", sorted(a, reverse=True))
    elif not is_all_numbers and not is_all_strings:
        print("What is list 'a' ?  --->", a)
        print("Pls don't send number and string inputs together")
    else:
        print("What is list 'a' ?  --->", inputs)
        print("Ascending order : ", sorted(inputs))
        print("Descending order : ", sorted(inputs, reverse=True))

#5) Find outputs  (Home  work)
print( 'green'   in   'Hyd  is  green  city') #True
print('day'   in   'Sankar  dayal  sarma') #True
print('Green'   in   'Hyd  is  green  city') #False
print('d  is'   in   'Hyd  is  green  city') #True
print('dis'   in   'Hyd  is  green  city')#False
print('iniv'   in   'Srinivas')#True
print('iniv'   not   in   'Srinivas')#False

#6) Slice  demo  program

a = 'Rama Rao'

print(a[:7:2])         # Rm a
print(a[:7])           # Rama Ra
print(a[2:4])           # ma
print(a[2:])            # ma Rao
print(a[:4])            # Rama
print(a[::2])           # Rm a
print(a[-6:-1])         # ma Ra
print(a[-6:])           # ma Rao
print(a[:-4:-1])        # oaR
print(a[-3:-1])         # Ra
print(a[-3:])           # Rao
print(a[::])            # Rama Rao
print(a[:])             # Rama Rao
print(a[::-1])          # oaR amaR
print(a[::-2])          # oRmR
print(a[-2::-2])        # a mR
print(a[2:8])           # ma Rao
print(a[2:8:-1])        #
print(a[:-6:-1])        # o a
print(a[2:-3])          # ma
print(a[1:6:2])         # aaR
print(a[:-5:-5])        # o
print(a[2:-5])          # m
print(a[2:-5:2])        # m
print(a[:0:-1])         # oaR am a
print(a[-5:0:-2])       # a m

#7) program  to  concatenate  two  strings  separated  by  space  but  swap  first  two characters  of  the  two  strings.
s1 = input("Enter first string: ")
s2 = input("Enter second string: ")

out1 = s2[:2] + s1[2:]
out2 = s1[:2] + s2[2:]

result = out1 + " " + out2
print(result)

#8) program  to  print  first  two  and  the  last  two  characters  of  the  string Print  an  empty  string  if  string  has  less  than  four  characters
s = input("Enter a string: ")

if len(s) < 4:
    print("")
else:
    print(s[:2] + s[-2:])

#9)program  to  print  characters  of  the  string  in  forward  and  reverse directions  without  slice
s = input("Enter a string: ")
for i in range(len(s)):
    print(f"Character at index {i} : {s[i]}")
print()
for i in range(-1, -len(s)-1, -1):
    print(f"Character at index {i} : {s[i]}")

#10) program  to  print  characters  at  even  and  odd  indexes  without  slice
s = input("Enter a string: ")

even = ''
odd = ''

for i in range(len(s)):
    if i % 2 == 0:
        even = even + s[i]
    else:
        odd = odd + s[i]

print("Characters at even indexes:", even)
print("Characters at odd indexes:", odd)

#11)
s = input("Enter input : ")
a = s.split()

out = ''
for i in range(0, len(a), 2):
    out = out + a[i] * int(a[i + 1])

print(out)

#12) program  to  merge  two  strings  to  form  a  new  string
a = input("Enter first string: ")
b = input("Enter second string: ")

c = ""
i = 0

while i < len(a) and i < len(b):
    c = c + a[i] + b[i]
    i += 1

c = c + a[i:] + b[i:]

print(c)

#13) program  to  remove  duplicate  characters  of  the  string  without  using  set
s = input("Enter a string: ")
out = ""

for ch in s:
    if ch not in out:
        out += ch

print(out)

#14) # len()  function  demo  program  (Home  work)
print(len('Hyd'))        # 3
print(len('Rama Rao'))   # 8  (includes space)
print(len('9247'))       # 4
print(len('+-\$'))       # 3
print(len(''))           # 0  (empty string)
print(len(' '))          # 1  (single space)
print(len('A2#'))        # 3
print(len(3456))       # ❌ Error
print('Sec'. len())    # ❌ Error

#15) chr()  function  demo  program
# chr() function demo program
print(chr(65))   # A   → Unicode 65 is 'A'
print(chr(90))   # Z
print(chr(97))   # a
print(chr(122))  # z
print(chr(48))   # 0
print(chr(57))   # 9
print(chr(36))   # $
print(chr(32))   # (space)

#16) # ord()  function  demo  program
print(ord('A'))   # 65    Converts 'A' to unicode value 65
print(ord('Z'))   # 90
print(ord('a'))   # 97
print(ord('z'))   # 122
print(ord('0'))   # 48
print(ord('9'))   # 57
print(ord('$'))   # 36
print(ord(' '))   # 32

s = input().strip()
out = ""

for i in range(0, len(s), 2):
    ch = s[i]
    if i+1 < len(s) and s[i+1].isdigit():
        num = int(s[i+1])
        new_char_code = ord(ch) + num
        if new_char_code > ord('Z'):
            out += '_' + ch + chr(new_char_code)
        else:
            out += ch + chr(new_char_code)
    else:
        print(f"Invalid format at position {i}: expecting a digit after '{ch}'")
        break

print(out)