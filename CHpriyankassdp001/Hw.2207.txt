1.

#  Find  outputs
print({10 , 20}  |  {30 , 20})    #  joining the two sets with | operator gives new set with 3 elements  i.e. {10,20,30}
print({10 : 'Hyd' , 20 : 'Sec'} |  {30 : 'Cyb' , 20 : 'Vja'}) # joinig the dictionaries by | operator i.e{ 10:'Hyd',20:'Vja',30:'Cyb'}
print(range(4) | range(5))           # throws the error due to range cant added
print([10 , 20]  |  [30 , 20])       # throws the error due | operator only used for the adding of set and dict only


2.

#  Assignment  operators  demo  program  (Home  work)
a = 25               # reference a points to the int object 25
print(a)             # returns the value of the object i.e.  25
b =  a               # reference b pointing the same address which a contains the object   
print(b)             #  returns the same object i.e.  25
print(a  is  b)      # True
x = 4                # Reference x point the int object i.e. 4
y = 5                # Reffernce y points the int object i.e. 5
z = x + y * 6        #  4+5*6  --- 4+30---34
print(z)             # returns the value of the object z i.e. 34
25 = a               # Throws the error due operand 1 must be reference only 
a + b = x + y        # Throws the error due operand 1 must be reference only 


3.

# Find outputs (Home work)
a = b = c = 25    # assinging the reference a to the b and b points to c and c pointing to the int object i.e 25
print(id(a))      # returns the address of the int object i.e.( 1000)--may be
print(id(b))      # returns the  same address of the int object i.e.( 1000)--may be
print(id(c))      # returns the same address of the int object i.e.( 1000)--may be
print(a , b , c)  # returns the value of the objects a,b,c i.e 25 25 

4.

# Multiple  Assignment (Home work)
x , y , z = 25 , 10.8 , 'Hyd'   # References x , y, z are points the object int obj 25 , float object 10.8 str object 'Hyd'
print(x)                        # pirnts the  value of the object x  i.e. 25
print(y)                        # pirnts the  value of the object x  i.e. 10.8
print(z)                        # pirnts the  value of the object x  i.e. 'Hyd' 


5.
# Find outputs (Home work)
a , b , c = 3 , 4 , 5    #reference  a, b,c are pointing the object 3,4,5
a *= b + c               #a=a*(b+c)---> a=3*(4+5)---->a=3*9--->a=27
print(a)                 #27


6.

a = 20           #reference a  pointing the int object 20
a %= 3 + 2 * 4   # evaluate the expression a=a%(3+2*4)-->a=20%(3+8)-->a=20%11 a=9
print(a)         # returns the value of the object i.e. 9


7.

# Find outputs (Home work)
a = 3       # Refernce a points the int object 3
a **= 4     #a=a**4--->a=3**4--->a=81
print(a)    # Returns the value of the object i.e. 81


8.

# Identity operators demo program
a = 25                # refernce a points to the int object 25
b = 25                # reference b points to the same int object 25  
print(a  is  b)       # True
print(a  is  not  b)  # False
print(a == b)         # True


9.


# Find outputs (Home work)
a = 25                 #refernce a point the int object 25
b = 25.0               # Reference b  points to the float object i.e 25.0
print(a  is  b)        # False
print(a  is  not  b)   # True
print(a == b)          # True


10.

# Find outputs (Home work)
a = 'Hyd'     # Reference a  point to the str object  i.e. 'Hyd'
b = 'Hyd'     # Reference a  point to the same str object  i.e. 'Hyd'
print(a  is  b)    #True
print(a  is  not  b)  # False
print(a == b)            # True
print()                        # Creates new line
x = [1 , 2 , 3 , 4]          # x refernce points to the list object i.e [1,2,3,4]
y = [1 , 2 , 3 , 4]          # y Refernce points to the  new list object i.e [1,2,3,4]
print(x is y)               #  False
print(x  is  not  y)     #  True
print(x == y)        	# True
print()          	 # Creates new line
m = (1 , 2 , 3 , 4)	# Reference m points to the tuple object i.e (1,2,3,4)
n = (1 , 2 , 3 , 4)	# Reference m points to the same tuple object i.e (1,2,3,4)
print(m  is  n)  	#True
print(m  is  not  n)	# False
print(m == n)	#True
print(x == m)	#False


11.

# Membership operators demo program (Home work)
list = [10 , 20 , 15 , 12 , 18]   # Reference list points to the list object i.e [10,20,15,12,18]
print(15 in list)                      # True
print(19 in list)                      #False
print(14 not in list)               #True
print(15 not in list)               # False
s = 'Hyd is green city'             # Reference s points to the str object i.e 'Hyd is green city'
print( 'is' in s)                          # true
print('was' in s)                       # False
print('g' in s)                            # True
print('z' in s)                             # False
print(' ' in s)                               # True
print('gre' in s)                          # True
print('yd i' in s)                           # True
print('' in s)                                 #True
print('' not in s)                           #False


12.

# Find outputs (Home work)
x = [1 , 2 , 3 , 4]     # Reference x points to the list object i.e[1,2,3,4]
y = [1 , 2 , 4 , 3]      # Reference x points to the new list object i.e[1,2,4,3]	
print(x == y)           # False
a = (4 , 1 , 3 , 2)        # Reference x points to the tuple object i.e(4,1,,3,2)
b = (4 , 2 , 3 , 1)        # Reference x points to the new tuple object i.e(4,2,3,1)
print(a == b)            # False
p = {1 , 2 , 3 , 4}        #  Reference x points to the set object i.e{1,2,3,4}
q = {4 , 1 , 3 , 2}          # Reference x points to the list object i.e[4,1,3,2]
print(p == q)             #  True
m = range(5)            #  Refernce m points to the range object range(5)
n = range(5)              #  Refernce m points to the new range object range(5)
print(m == n)          # True


13.

a = [10,20,30]   # Reference a points to the list object i.e. [10,20,30]
b = (10,20,30)    # refernce b points to the tuple object i.e (10,20,30)
print(a  is  b)     # False
print(a  ==  b)    #   False







































 