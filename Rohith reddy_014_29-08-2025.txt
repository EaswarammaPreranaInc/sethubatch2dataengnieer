Find  outputs  (Home  work)
def    f1(a , b , c):
          print(F'a  :  {a}    \t  b  :  {b}  \t  c :  {c}')         # 3 parameters f1(a=10,b=20,c=30)
# End  of  the  function
f1(a = 10 , b = 20 , c = 30)                                         # argument key words a:10 b:20 c:30
f1(25 , 10.8 , 'Hyd')                                                # positional arguments a:25 b:10.8 c:Hyd
f1(b = 40.7 , a = 50.2 , c = 60.5)                                   # key words order is different , a:50.2 b:40.7 c:60.5
f1(c = 'Hyd' , b = 'Sec' , a = 'Cyb')                                # key words different order , a:Cyb b:Sec c:Hyd
f1(c = 3 + 4j , a = True , b = None)                                  # different data types a:TRUE b: None c:3+4j
f1(25 , c = 10.8 , b = 'Hyd')                                         # positional arguments and key words, a:25 b:Hyd c:10.8
f1(a = 100 , 200 , 300)                                                # error 
f1(True , None , b = 'Hyd')                                            # error both positional arguments and key words are mixed
f1(10 , 20 , x = 30)                                                   # error because no papameters
f1(10 , 20)                                                            # error because we need 3 arguments but it is only 2 arguments
   

  find  outputs (Home  work)
def    disp(empno , ename , sal):
        print(F'Emp  Number : {empno:4}  \t  Emp  Name : {ename:15}  \t  Salary : {sal}')            # Emp Number :   25  	  Emp Name : Rama Rao       Salary : 10000.0
# End  of  the  function
disp(25 , 'Rama Rao' , 10000.0)                                                                       # Emp Number :   25  	  Emp Name : Rama Rao       Salary : 10000.0
disp(ename = 'Sita' , sal = 20000.0 , empno = 35)                                                     #Emp Number :   35  	  Emp Name :Sita       	  Salary : 200000.0
x = 'Rama  Rao'                                                                                        
y = 30000.0                                                                                            
z = 20                                                                                                  
disp(x , y , z)                                                                                         # Emp Number : Rama  Rao  	  Emp Name : 30000.0         	  Salary : 20
     

      Tricky  program
# Find  outputs (Home  work)
def    f1(a , b , c):
	return  a + b * c
#end  of  the  function
print(f1(3 , 4 , 5))                                                    #  3 + 4*5 = 3+20=23
print(f1(*[6 , 7 , 8]))                                                 # unpack list , 6+7*8 = 6+56=62
print(f1([6 , 7 , 8]))                                                  # error because only one argument pass but funtion needs 3 arguments
print(f1(*{1 : 2 , 3 : 4 , 5 : 6}))                                     # dict unpack ,1 +3*5= 1+15 = 16
print(f1**({'c' : 2 , 'b' :  4 , 'a' : 6}))                              # unpack key values as key word arguments , 6 + 4* = 6 + 8 = 14      
print(f1({'c' : 2 , 'b' :  4 , 'a' : 6}))                               # error because it pass only argument but function needs 3 arguments
print({{'c' : 2 , 'b' :  4 , 'a' : 6}})                                 # same dict, {'c':2,'b':4 ,'a':6}          
print(f1({'c' : 2 , 'a' : 4 , 'x' : 6}))                                # error because does not match any papameter
          

 Identify  Error (Home  work)
a = [10 , 20 , 15 , 5 , 12]                                          
print(sorted(reverse = True , a))                                    # error because positional argument is after keyword argument
print(sorted(a , rev = True))                                        # error because rev is not a key word is arg
print(25 , 10.8 , 'Hyd' , separator = '\t')                          #  error becuase seperator is not a parameter
print(25 , 10.8 , 'Hyd' , endofline = '\t')                          # error because seperator is not a parameter
print(25 ,  sep = '\t' , 10.8 , end = '\t' , 'Hyd')                  # positional arg after key word arg is not allowed
      

      Keyword  only   arguments  demo  program
def   f1(* , a , b):
        print(F'a  :  {a}  \t  b :  {b}')             #key word only arguments
# End  of  the  function                          
f1(a = 10 , b = 20)                                   # a:10 b:20
f1(b = 30 , a = 40)                                   # a:40 b:30 key words
f1(50 , 60)                                           # error because positional is not allowed
f1(70 , b = 80)                                       # error becuase positional argument is not allowed 
f1(a = 15 , 25)                                       # error because positional argument is not  allowed
   


   Find  outputs (Home  work)
def  f1(a , * , b , c):
        print(F'a  :  {a}  \t  b :  {b}  \t  c  :  {c} ')# positional and keywords
# End  of  function
f1(10 , b = 20 , c = 30)                                  #positional, a:10 b:20 c:30
f1(a = 40 , b = 50 , c = 60)                              #keyword,a:40 b:50 c:60
f1(c = 100 , b = 90 , a = 80)                             #any order with keywords, a:80  b:90 c:100
f1(70 , 80 , c = 90)                                       #error because after * only keywords allowed 
f1(70 , 80 , 90)                                          # error because only 1st positional is not allowed
f1(c = 15 , b = 25 , 35)                                  # error becuase positional arg after key word not allowed
   

    Identify error (Home  work)
def   f1(a  , b , *):
        pass                                               # argument after* must be only key word



 Positional  only  arguments  demo  program
def   f1(a , b , /):
        print(F'a  :  {a}  \t  b  :  {b}')                     # cannot be passed as key words 
# End  of   the  function
f1(10 , 20)                                                    # a :10  b:20 positional
f1(a = 30 ,  b = 40)                                           #  error positional only but not key words
f1(50 , b = 60)                                                # error key words not allowed
f1(a = 70 , 80)                                                # error because positional is after key word
   

    Find  outputs (Home  work)
def  f1(a , b , / , c):
        print(F'a  :  {a}  \t  b :  {b}  \t  c  :  {c} ')     # positional arguments
# End  of  function
f1(10 , 20 , 30)                                              #  a:10 b:20 c:30
f1(40 , 50 , c = 60)                                          # 2 positional and 1 key word   a:40 b:50 c:60
f1(a = 70 , b = 80 , c = 90)                                  # error becuase a b are positional but c is key word 
f1(a = 100 , b = 110 , 120)                                   # error because invalid pass key words
f1(a = 130 , 140 , c = 150)                                   # error becuase after key word
f1(160 , b = 170 , 180)                                       # error becuase after key word
f1(190 , b = 200 , c = 210)                                   #  error because 200 key word not allowed


   


   Find outputs(Home  work)
def  f1(a , b , / , c , d , * , e  , f):
        print(F'a  :  {a}  \t  b  :  {b}  \t  c  :  {c}  \t  d  :  {d}  \t  e  :  {e}  \t  f  :  {f}') # a,b are positional c , d are parameters e , f are key words
# End of the function
f1(10 , 20 , 30 , d = 40 , e = 50 , f = 60)                        # a : 10 	 b : 20 	 c : 30 	 d : 40 	 e : 50 	 f : 60
f1(1 , b = 2 , c = 3 , d = 4 , e = 5 , f = 6)                      # error because key words are not allowed after positional
f1(1 , 2 , 3 , 4 , 5 , f = 6)                                      # error 
f1(10 , 20 , c = 30 , 40 , e = 50 , f = 60)                        # error 
f1(10 , 20 , 30 , 40 , e = 50 , f = 60)                            # a : 10 	 b : 20 	 c : 30 	 d : 40 	 e : 50 	 f : 60
   

    Identify error (Home  work)
def  f1(/ , a , b ,  c):                                      # / all arguments before
        pass                                                  
def   f2(a , b , c , *):                                      # no arguments before
        pass                                                  


 Identify  error  (Home  work)
def  f4(* , a , b , c , /):
	        pass                                               #error possitional only first then key words
        

         Find  outputs  (Home  work)
def  f1(x):
	print('1st  function : ' , x)                        # 1st fun is replaced by 2nd
def  f1(y):
	print('2nd  function : ' , y)                        # 2nd fun is replaced by 3rd
def  f1(z):
	print('3rd  function : ' , z)                        # then 3rd remains
f1(z = 10)                                               #  10
f1(y = 20)                                               # error becuase function has only papameter z
f1(x = 30)                                               # error becuase function has only papameter x
   


    Default  arguments  demo  program
def   add(a  , b = 20 , c = 30):
        return   a + b + c
#end  of  the  functiom
print(add(100))                                      # 150
print(add(100 , 200))                                # 330
print(add(100 , 200 , 300))                          # 600
print(add(100 , c = 200))                            # 320
print(add(c = 100 , b = 200 , a = 300))              # 600
print(add(c = 100 , a = 200))                        # 320
print(add())                                         # error because missing argument a
print(add(a = 100 , 200))                            # error because positional arg is after key word is not allowed
print(add(100 ,  , 300))                             #error empty arg
print(add(100 ,  b , 300))                           # error  b is not defined
          

           Identify  Error
def   f1(a = 10 ,  b ,  c = 20 ,  d):
	pass                                           # a is default b is no default
def   f2(b , d , a = 10 , c = 20):                 # b d are arg 
	pass
        

         Find  outputs (Home  work)
def   f1(a = 10):
        print(a)                                    
# End  of  the  function
f1(20)                                              # 20
f1()                                                # 10
f1(a = 30)                                          # 30
   


    Find  outputs (Home  work)
def  add(a , b , c = 10 , d = 20):
        return  a + b + c + d
# End  of  the  function
print(add(100 , 200))                                     # 330
print(add(100 , 200 , 300))                               # 620
print(add(100 , 200 , 300 , 400))                         # 1000
print(add(b = 100 , a = 200))                             # 330
print(add(100 , 200 , d = 300))                           # 610
print(add(d = 100 , a = 200 , b = 300))                   # 610
print(add(c = 100 , d = 200 , 300 , 400))                 # error because positional arg cannot use after key word arg
print(add(100 , 200 , c = 300 , x = 400))                 # error not a parameter
print(add())                                              # error missing args



   
Find  outputs (Home  work)
def    f1(x = 25):                         
        return  x                          
def   f2(x):                               
        return  x                          
# End  of  the  function
print(f1(10))                              #10                            
print(f1())                                #25
print(f2(20))                              #20 
print(f2())                                #error because missing positional argv



 Find  outputs (Home  work)
def   disp(ch = '*' , n = 4):
        print(ch *  n)
# End of the function
disp('-' , 6)                         #_ _ _ _ _ _
disp('$')                             # "$$$$""
disp()                                #"****"
disp(n = 5)                           #"*****"
disp(5)                               #20
disp(n = 7 , ch = '%')                #"%%%%%%%"
disp(7 , '@')                         # error because str and int allowed
disp(7 , n = 6)                       #42
disp(ch = '!' ,  5)                   #error because positional argv is a after key word argv
     


      Find  outputs (Home  work)
def  power(a , b  =  2):
        return  a ** b
#end of the function
print(power(2 , 6))                       #2**6=64
print(power(5))                            #25
print(power(b = 3 , a = 4.5))               #91.125
print(power(3 + 4j))                        #-7+24j
print(power(True))                           #1
def   power(b = 2 , a):                      #error because parameters with default values
 	 pass



# Find outputs  (Home  work)
def   add(a , b):
	print('2-argument  function')          
	return a + b
def  add(a , b , c):
	print('3-argument  function')           
	return a + b + c
def  add(a  = 1 , b  = 2 , c   = 3 , d = 4):
	print('4-argument  function')
	return a + b  + c + d
# End  of  the  function
# last function will be called
print(add(10 , 20 , 30 , 40))              #100
print(add(50 , 60 , 70))                   #184
print(add(80 , 90))                        #177
print(add(100))                            #109
print(add())                               #10



Find outputs  (Home  work)
def  disp(a , b):
        print('2-argument function  :  ' , a , b)
def  disp(a , b , c , d):
        print('4-argument  function  :  ' , a , b , c , d)
def disp(a , b , c = 25):
        print('3-argument  function  :  ' , a , b , c)
#end
disp(10 , 20 , 30)                  #3- argument function, 10 20 30
disp(40 , 50 , 60 , 70)             #error because positional argument maximum 3 arguments
disp(80 , 90)                       # 3 - arguments , 80 90 25
     

     Find outputs(Home  work)
def   add(* , a = 10 , b = 20):
        return  a + b
# End of  the  function
print(add(a = 30 , b = 40))              #  70        
print(add())                             # 30
print(add(a = 50))                       # 70
print(add(b = 60 , a = 70))              # 130
print(add(80 , 90))                      # error because positional args are not allowed
          


           Find  outputs(Home  work)
def   add(a = 10 , b , c):
        pass
def   add( * , a = 10 , b , c ):
        return  a + b + c
# End  of  the  function
print(add(a = 30 , b = 40 , c = 50))           # 120
print(add(b = 60 , c = 70))                    #140
print(add(c = 80 , b = 90 , a = 100))          #270
print(add(c = 25 , a = 43))                    # error because b is missing
print(add(1 , 2 , 3))                           # error because positional argv is not allowed
def   add(a , b = 10 ,  c ,  * , d  , e = 20 , f): # error because argument default
		pass



 Modify  following  program  such  that  every  function  should  be  executed
def  f1():
	print('No-argument  function')
def  f1(x):
	print('Single  argument  function  : ' , x)
def  f1(x , y):
	print('Two  argument  function : ' , x , y)
def  f1(x , y , z):
	print('Three  argument  function : ' , x , y , z)
       


       def f1(*args):
    if len(args) == 0:
        print("No-argument function")
    elif len(args) == 1:
        print("Single argument function :", args[0])
    elif len(args) == 2:
        print("Two argument function :", args[0], args[1])
    elif len(args) == 3:
        print("Three argument function :", args[0], args[1], args[2])
    else:
        print("More than 3 arguments:", args)

# Calls
f1()
f1(10)
f1(20, 30)
f1(40, 50, 60)
f1(1, 2, 3, 4, 5)   # extra case



write  a  program  to  generate  all   prime  numbers  between  2  and  n   and
also  print  how  many  prime  numbers  are  existing

Hint:  Use  the  prime()  function  defined  in   prog3a(prime).py  but  do  not  rewrite

What  are  the  outputs  if  input  is  10  ?  --->  Prime   numbers
																		   2
																		   3
																		   5
																		   7
																		  Number  of   prime  numbers : 4
'''
How  to  read  a  number
How  to  print  all  prime  numbers  between  2  and  user  input
print('Number  of  prime numbers  :  ' ,  ???)


from prog3a import prime    # import the prime() function

n = int(input("Enter a number: "))

count = 0
print("Prime numbers")
for i in range(2, n+1):
    if prime(i):
        print(i)
        count += 1

print("Number of prime numbers :", count)
     